<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on xin blog</title>
    <link>https://xinii.github.io/zh-cn/blog/</link>
    <description>Recent content in Blog on xin blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 12 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://xinii.github.io/zh-cn/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在jetson nano上安装opencv</title>
      <link>https://xinii.github.io/zh-cn/blog/install-opencv-on-jetson-nano/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/zh-cn/blog/install-opencv-on-jetson-nano/</guid>
      <description>生成swap文件 为防止编译途中由于内存不足等问题报错， 这里首先提前创建一个swap文件，存放路径任意。 重启后swap空间会消失， 以下编译等全部工作完成后可以手动删除这个文件。
$ fallocate -l 4G swapfile $ chmod 600 swapfile $ mkswap swapfile $ sudo swapon swapfile $ swapon -s 生成安装脚本 安装opencv 4.0.0版本的脚本原始链接
以上是安装opencv 4.0.0的版本，在这里我们希望安装较新的4.1.0版本，将上面的代码稍作改动（版本号的部分）：
#!/bin/bash # # Copyright (c) 2018, NVIDIA CORPORATION. All rights reserved. # # NVIDIA Corporation and its licensors retain all intellectual property # and proprietary rights in and to this software, related documentation # and any modifications thereto. Any use, reproduction, disclosure or # distribution of this software and related documentation without an express # license agreement from NVIDIA Corporation is strictly prohibited.</description>
    </item>
    
    <item>
      <title>安装gnutls并从源码编译emacs</title>
      <link>https://xinii.github.io/zh-cn/blog/install-gnutls-and-compile-emacs-from-source/</link>
      <pubDate>Sat, 04 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/zh-cn/blog/install-gnutls-and-compile-emacs-from-source/</guid>
      <description>若当前环境没有gnutls， 那么在使用emacs源代码进行编译安装前的配置 （./configure）时可以临时使用--with-gnutls=no选项， 以使编译安装能够顺利进行。 例如下面的配置：
bash configure --prefix=$HOME/.local --with-gif=no --with-gnutls=no 上面的例子虽然可以正常安装emacs到$HOME/.local目录， 但缺少了gnutls的支持， emacs内就只能使用http协议而并不能使用https协议， 虽然在emacs初始化时可以将melpa的链接都改为http协议解决问题， 但如果后期使用google-translate之类的包时还是会遇到问题。
例如即使在elpa下将google-translate包内的所有.el 文件中出现的https改为http， 中途还是会出现自动使用某些https服务的情况，从而导致翻译异常。 （这里需要注意，修改后需删除所有.elc文件以强制重新编译使修改生效）
上面问题的解决办法很简单，只需在当前环境安装gnutls即可。
以OpenSUSE为例，在终端下运行下面的语句即可完成安装。
sudo zypper install gnutls 另外，在安装emacs时，如果make后报以下错误，
checking for library containing tputs... no configure: error: The required function &amp;#39;tputs&amp;#39; was not found in any library. The following libraries were tried (in order): libtinfo, libncurses, libterminfo, libcurses, libtermcap Please try installing whichever of these libraries is most appropriate for your system, together with its header files.</description>
    </item>
    
    <item>
      <title>我的shell迁移记录</title>
      <link>https://xinii.github.io/zh-cn/blog/my-shell-migration-record/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/zh-cn/blog/my-shell-migration-record/</guid>
      <description>从bash到zsh 虽然我使用zsh shell两周后就换到fish shell了（关于fish shell下面有专门介绍）， 但这并不否认zsh shell仍然是个很好的shell。 你可以通过下面的方式从任意的shell切换至zsh shell。
 安装zsh时通过下面的指令：  brew install zsh (MacOS) apt install zsh (Ubuntu / Linux Mint)  如果你想要知道现在系统裡已经安装好的shell，输入下面的指令：  cat /etc/shells  如何将zsh作为你默认的shell呢？，输入下面的指令：  chsh -s /usr/local/bin/zsh  关于配置文件的读取错误  shell脚本解释出错时可以查看一下当前所使用的sh路径， 比如有可能是sh指向了dash导致出错。 通过下面的语句查看。
ls -l `which sh`  脚本解释器在语法上的不同点  从传统的bash等shell换到zsh时会发现集合的第一个元素的索引是从1开始的， 如果希望从0开始，在配置文件中配置下面语句即可。
 Fix array index for zsh:  if [ &amp;#34;$ZSH_NAME&amp;#34; = &amp;#34;zsh&amp;#34; ];then setopt localoptions ksharrays fi 配置zsh shell 与bash shell的.bashrc类似，zsh的配置也需要一个配置文件， 这个文件是在用户目录下的.</description>
    </item>
    
    <item>
      <title>使用usb设备安装linux mint</title>
      <link>https://xinii.github.io/zh-cn/blog/install-linux-mint-from-the-usb-device/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/zh-cn/blog/install-linux-mint-from-the-usb-device/</guid>
      <description>重要：在开始下面的工作之前，首先确保U盘没有存任何东西， 或者里面没有放任何的重要数据（因为烧录会导致数据丢失）， 同时电脑上已经准备好空的分区（安装到的目标分区的数据也会被抹掉）。
准备一个用于安装linux mint的usb设备 首先准备一个usb设备，可以是u盘也可以是usb的移动硬盘， 之后会在这个上面写入供安装linux mint的安装程序。
 如果使用的是windows操作系统，那么点击 这里 来查看ubuntu官方的教程以创建一个可以安装Linux的USB设备。  注意：上面的教程是教你如何製作一个用于安装Ubuntu的USB设备， 安装linux mint的情况下仅需要把涉及到iso文件的地方换成Linux Mint的iso文件，其他地方完全相同。
 其中会用到的软件叫做rufus，上面的教程裡面也有提到，点击 这里 打开rufus的官方网站，你也可以点击 这里 直接下载rufus。  linux mint的iso文件 前一节提到的linux mint的iso文件需要从下面的地方获取。点击 这里 打开linux mint的官方网站。 或者也可以点击 这里 直接下载Linux Mint 19.1版本。</description>
    </item>
    
    <item>
      <title>通过jekyll创建博客并发布到github</title>
      <link>https://xinii.github.io/zh-cn/blog/create-a-blog-by-jekyll-and-publish-to-github/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/zh-cn/blog/create-a-blog-by-jekyll-and-publish-to-github/</guid>
      <description>安装Jekyll Jekyll 是一个基于Ruby语言的静态网站生成工具，下面是官网介绍。
 Jekyll is a simple, extendable, static site generator. You give it text written in your favorite markup language and it churns through layouts to create a static website. Throughout that process you can tweak how you want the site URLs to look, what data gets displayed in the layout, and more.
 那么安装Jekyll之前首先需要一个Ruby的编程环境， 这里首先需要准备好Ruby的包管理器gem， 然后只需要在终端执行gem install jekyll就可以安装Jekyll了。
{% include elements/figure.html image=&amp;quot;https://xinii.github.io/clean-blog/img/posts/jekyll.png&amp;rdquo; caption=&amp;quot;The logo of Jekyll&amp;rdquo; %}</description>
    </item>
    
  </channel>
</rss>