[{
    "title": "安装gnutls并从源码编译emacs",
    "date": "May 4, 2019",
    "description": "安装gnutls并从源码编译emacs",
    "body": "若当前环境没有gnutls， 那么在使用emacs源代码进行编译安装前的配置 （./configure）时可以临时使用--with-gnutls=no选项， 以使编译安装能够顺利进行。 例如下面的配置：\nbash configure --prefix=$HOME/.local --with-gif=no --with-gnutls=no 上面的例子虽然可以正常安装emacs到$HOME/.local目录， 但缺少了gnutls的支持， emacs内就只能使用http协议而并不能使用https协议， 虽然在emacs初始化时可以将melpa的链接都改为http协议解决问题， 但如果后期使用google-translate之类的包时还是会遇到问题。\n例如即使在elpa下将google-translate包内的所有.el 文件中出现的https改为http， 中途还是会出现自动使用某些https服务的情况，从而导致翻译异常。 （这里需要注意，修改后需删除所有.elc文件以强制重新编译使修改生效）\n上面问题的解决办法很简单，只需在当前环境安装gnutls即可。\n以OpenSUSE为例，在终端下运行下面的语句即可完成安装。\nsudo zypper install gnutls 另外，在安装emacs时，如果make后报以下错误，\nchecking for library containing tputs... no configure: error: The required function \u0026#39;tputs\u0026#39; was not found in any library. The following libraries were tried (in order): libtinfo, libncurses, libterminfo, libcurses, libtermcap Please try installing whichever of these libraries is most appropriate for your system, together with its header files. For example, a libncurses-dev(el) or similar package. make: *** No targets specified and no makefile found. Stop. make: *** No rule to make target \u0026#39;install\u0026#39;. Stop. 那么对于OpenSUSE的环境可能需要ncurses-devel的包， 执行下面的语句安装即可。\nsudo zypper install ncurses-devel ",
    "ref": "/zh-cn/posts/install-gnutls-and-compile-emacs-from-source/"
  },{
    "title": "我的shell迁移记录",
    "date": "May 3, 2019",
    "description": "从bash到zsh再到fish",
    "body": "从bash到zsh 虽然我使用zsh shell两周后就换到fish shell了（关于fish shell下面有专门介绍）， 但这并不否认zsh shell仍然是个很好的shell。 你可以通过下面的方式从任意的shell切换至zsh shell。\n 安装zsh时通过下面的指令：  brew install zsh (MacOS) apt install zsh (Ubuntu / Linux Mint)  如果你想要知道现在系统裡已经安装好的shell，输入下面的指令：  cat /etc/shells  如何将zsh作为你默认的shell呢？，输入下面的指令：  chsh -s /usr/local/bin/zsh  关于配置文件的读取错误  shell脚本解释出错时可以查看一下当前所使用的sh路径， 比如有可能是sh指向了dash导致出错。 通过下面的语句查看。\nls -l `which sh`  脚本解释器在语法上的不同点  从传统的bash等shell换到zsh时会发现集合的第一个元素的索引是从1开始的， 如果希望从0开始，在配置文件中配置下面语句即可。\n Fix array index for zsh:  if [ \u0026#34;$ZSH_NAME\u0026#34; = \u0026#34;zsh\u0026#34; ];then setopt localoptions ksharrays fi 配置zsh shell 与bash shell的.bashrc类似，zsh的配置也需要一个配置文件， 这个文件是在用户目录下的.zshrc文件，点击 这里 打开我上传到Github的配置文件下载使用。\n从zsh到fish 使用zsh shell之后大概两週我就换到fish shell了， 这不是因为zsh不好，而是fish天然的完成度和易用性吸引了我， 转移到fish环境后，有关shell折腾算是告一段落，以下对该过程纪录。\nfish shell的安装以及默认shell的切换 这个上面提到过，这裡具体针对不同的操作系统所需要执行的指令进行介绍。\n MacOS:  brew install fish  Ubuntu/Linux Mint:  apt install fish  OpenSUSE:  sudo zypper install fish 如果需要root权限，例如你是运行在Windows下的OpenSUSE环境， 则默认需要root权限，则前面加sudo。 通过下面的语句查看当前系统所使用的shell：\ncat /etc/shells 如果显示你的fish shell在/usr/bin/fish， 那麽执行下面的语句切换其为默认shell（权限不足则补充sudo）：\nchsh -s /usr/bin/fish 现在重新打开一个终端会话会发现默认shell已经切换到fish了。 如果打开fish shell后马上报很多关于hostname的错， 也就是说当前环境缺少一个叫做hostname的包， 那麽使用你所使用的发行版的包管理器安装hostname， 例如在OpenSUSE下使用：\nsudo zypper install hostname fish的配置 我写好的配置上传在了Github，点击 这里 查看我的配置。\n在fish shell下使用python时的常见问题 目前我遇到的比较需要注意的问题有下面两点：\n 关于tmux  tmux在后台存在session的时候， 即使更新PYTHONPATH环境变量也不会生效， 此时需要关闭tmux的所有进程，更新才会生效。 除fish以外其他shell环境应该也会遇到， 我是在fish首次出现，留作纪录。\n 关于PYTHONPATH  fish shell中定义环境变量的方式为set \u0026lt;variable_name\u0026gt; \u0026lt;parameter_1\u0026gt; \u0026lt;parameter_2\u0026gt; 这种方式有很大的优越性而且非常方便， 然而对于PYTHONPATH， 则set PYTHONPATH \u0026lt;parameter_1\u0026gt;:\u0026lt;parameter_2\u0026gt;的方式更具有通用性。 原因为，经过测试在MacOS下两种方式均可正常使用， 但在运行在Jetson Nano上的Ubuntu下测试时，只有第二种方式可用。 具体原因尚未明确，有可能时操作系统不同的原因， 也可能是python版本不同造成的 （比如版本号相同，但处理器架构不同造成了编译方式的差异导致该问题）。\n",
    "ref": "/zh-cn/posts/my-shell-migration-record/"
  },{
    "title": "使用USB设备安装Linux Mint",
    "date": "April 23, 2019",
    "description": "使用USB设备安装Linux Mint",
    "body": "重要：在开始下面的工作之前，首先确保U盘没有存任何东西， 或者里面没有放任何的重要数据（因为烧录会导致数据丢失）， 同时电脑上已经准备好空的分区（安装到的目标分区的数据也会被抹掉）。\n准备一个用于安装Linux Mint的USB设备 首先准备一个USB设备，可以是U盘也可以是USB的移动硬盘， 之后会在这个上面写入供安装Linux Mint的安装程式。\n 如果你使用的是Windows操作系统，那么点击 这里 来查看Ubuntu官方的教程以创建一个可以安装Linux的USB设备。  注意：上面的教程是教你如何製作一个用于安装Ubuntu的USB设备， 安装Linux Mint的情况下仅需要把涉及到iso文件的地方换成Linux Mint的iso文件，其他地方完全相同。\n 其中会用到的软件叫做Rufus，上面的教程裡面也有提到，点击 这里 打开Rufus的官方网站，你也可以点击 这里 直接下载Rufus。  Linux Mint的iso文件 前一节提到的Linux Mint的iso文件需要从下面的地方获取。点击 这里 打开Linux Mint的官方网站。或者你也可以点击 这里 直接下载Linux Mint 19.1版本。\n",
    "ref": "/zh-cn/posts/install-linux-mint-from-the-usb-device/"
  },{
    "title": "通过jekyll创建博客并发布到github",
    "date": "April 2, 2019",
    "description": "通过jekyll创建博客并发布到github",
    "body": "安装Jekyll Jekyll 是一个基于Ruby语言的静态网站生成工具，下面是官网介绍。\n Jekyll is a simple, extendable, static site generator. You give it text written in your favorite markup language and it churns through layouts to create a static website. Throughout that process you can tweak how you want the site URLs to look, what data gets displayed in the layout, and more.\n 那么安装Jekyll之前首先需要一个Ruby的编程环境， 这里首先需要准备好Ruby的包管理器gem， 然后只需要在终端执行gem install jekyll就可以安装Jekyll了。\n{% include elements/figure.html image=\u0026quot;https://xinii.github.io/clean-blog/img/posts/jekyll.png\u0026rdquo; caption=\u0026quot;The logo of Jekyll\u0026rdquo; %}\n发布到Github 安装好Jekyll之后，在你的工作目录下执行jekyll new \u0026lt;Your website folder name\u0026gt;， 即可生成一个测试网站。\n接下来在你的Github上创建一个叫做\u0026lt;Your username\u0026gt;.github.io的仓库（repository）， 然后通过git push指令把你的网站push到建立好的仓库就可以了。 几分钟后打开\u0026lt;Your username\u0026gt;.github.io就应该可以看到你的页面。\n我的这个博客的个人主页就是通过以上方式创建， 欢迎参考并留言。\n",
    "ref": "/zh-cn/posts/create-a-blog-by-jekyll-and-publish-to-github/"
  }]
