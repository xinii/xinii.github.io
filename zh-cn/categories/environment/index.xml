<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>environment on xin iDEA iNNATA</title>
    <link>https://xinii.github.io/zh-cn/categories/environment/</link>
    <description>Recent content in environment on xin iDEA iNNATA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 03 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://xinii.github.io/zh-cn/categories/environment/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>为Fish和Emacs添加apt仓库</title>
      <link>https://xinii.github.io/zh-cn/blog/environment/add-apt-repository-for-fish-and-emacs/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/zh-cn/blog/environment/add-apt-repository-for-fish-and-emacs/</guid>
      <description>目录  将要使用的命令 没这个命令？先试试这个 安装过程  注册仓库 刷新仓库 安装    将要使用的命令 add-apt-repository 没这个命令？先试试这个 apt install software-properties-common 安装过程 注册仓库 add-apt-repository ppa:kelleyk/emacs apt-add-repository ppa:fish-shell/release-3 刷新仓库 apt update 安装 apt install emacs26 apt install fish </description>
    </item>
    
    <item>
      <title>几个ssh的设定</title>
      <link>https://xinii.github.io/zh-cn/blog/environment/several-ssh-configurations/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/zh-cn/blog/environment/several-ssh-configurations/</guid>
      <description>目录  ssh连接终端的现象  解决方法 One more thing   通过termux应用开启安卓ssh服务  安装 设置密钥文件 在调试模式下启动服务 启动服务 在电脑端登录设置好的服务    ssh连接终端的现象  当通过 ssh 进行远程登录的时候，如果长时间没有操作，则会出现 Write failed: Broken pipe 的错误提示并连接中断。 这是因为在一定时间内没有数据交换的情况下 ssh 连接默认会自动断开。要解决这个问题需要从客户端或者服务器端来改变设置。  解决方法  从客户端解决  将下面的内容配置在 /etc/ssh/ssh_config 或 ~/.ssh/config 中。
ServerAliveInterval 15 ServerAliveCountMax 10 通过以上的设定，每 15 秒会进行 10 次应答确认，仍然没有应答的情况下才会断开连接。
 从服务器端解决  将下面的内容配置在 /etc/ssh/sshd_config 中。
ClientAliveInterval 30 ClientAliveCountMax 5 通过以上的设定，每 30 秒会进行 5 次应答确认，仍然没有应答的情况下才会断开连接。
One more thing 这里非常推荐使用 tmux 或者 screen 之类的工具， 这样即使丢失连接，也可以在重新连接服务器后快速通过挂载原先的会话的方式迅速恢复工作环境。</description>
    </item>
    
    <item>
      <title>在Jetson Nano上安装OpenCV</title>
      <link>https://xinii.github.io/zh-cn/blog/environment/install-opencv-on-jetson-nano/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/zh-cn/blog/environment/install-opencv-on-jetson-nano/</guid>
      <description>目录  生成swap文件 生成安装脚本 运行脚本 测试安装好的opencv  生成swap文件 为防止编译途中由于内存不足等问题报错， 这里首先提前创建一个swap文件，存放路径任意。 重启后swap空间会消失， 以下编译等全部工作完成后可以手动删除这个文件。
$ fallocate -l 4G swapfile $ chmod 600 swapfile $ mkswap swapfile $ sudo swapon swapfile $ swapon -s 生成安装脚本 安装opencv 4.0.0版本的脚本原始链接
以上是安装opencv 4.0.0的版本，在这里我们希望安装较新的4.1.0版本，将上面的代码中版本号的部分稍作改动。
#!/bin/bash # # Copyright (c) 2018, NVIDIA CORPORATION. All rights reserved. # # NVIDIA Corporation and its licensors retain all intellectual property # and proprietary rights in and to this software, related documentation # and any modifications thereto.</description>
    </item>
    
    <item>
      <title>安装Gnutls并从源码编译Emacs</title>
      <link>https://xinii.github.io/zh-cn/blog/environment/install-gnutls-and-compile-emacs-from-source/</link>
      <pubDate>Sat, 04 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/zh-cn/blog/environment/install-gnutls-and-compile-emacs-from-source/</guid>
      <description>Emacs 的 Logo1目录  环境中缺少Gnutls的情况 潜在的问题 安装Gnutls 其他可能的问题  环境中缺少Gnutls的情况 若当前环境缺少 Gnutls，那么在对 Emacs 的源代码进行编译安装前需要以下配置。
./configure --with-gnutls=no 或者同时指定安装目录、添加忽略其他仍缺少的依赖库的选项等，例如以下配置。
bash configure --prefix=$HOME/.local --with-gif=no --with-gnutls=no 这样可以在缺少对默认安装路径权限，或者缺少各种依赖库的情况下使配置及安装得以顺利进行。
潜在的问题 以上虽可以达到正常安装 Emacs 到 $HOME/.local 目录的目的， 但由于缺少了 Gnutls 组件，Emacs 中用到网络传输的时候便只能使用 http 而不能使用 https。
如果只是 Emacs 初始化时需要网络连接，还可以通过将 Melpa 的链接都改为以 http 开头来解决问题， 但这为今后使用 Emacs 中需要网络连接的各种扩展带来问题。
例如使用 google-translate 时，即使将 Emacs 配置文件夹中 elpa 文件夹下的 google-translate 包内的所有 *.el 文件中出现的 https 改为 http， 在实际使用的途中仍会出现自动使用某些 https 服务的情况，从而导致翻译异常。
这里有一点需要注意的是，修改 *.el 文件后需删除所有 *.elc 文件以强制重新编译使修改生效。
安装Gnutls 经过以上实际测试我们不难发现，在当前环境中安装好 Gnutls 之后再从源码安装 Emacs 是一个不错的选择。</description>
    </item>
    
    <item>
      <title>我的shell迁移记录</title>
      <link>https://xinii.github.io/zh-cn/blog/environment/my-shell-migration-record/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/zh-cn/blog/environment/my-shell-migration-record/</guid>
      <description>Picture: High contrast utilities terminal1从bash到zsh 虽然我使用zsh shell两周后就换到fish shell了（关于fish shell下面有专门介绍）， 但这并不否认zsh shell仍然是个很好的shell。 你可以通过下面的方式从任意的shell切换至zsh shell。
 安装zsh时通过下面的指令：  brew install zsh (MacOS) apt install zsh (Ubuntu / Linux Mint)  如果你想要知道现在系统裡已经安装好的shell，输入下面的指令：  cat /etc/shells  如何将zsh作为你默认的shell呢？，输入下面的指令：  chsh -s /usr/local/bin/zsh  关于配置文件的读取错误  shell脚本解释出错时可以查看一下当前所使用的sh路径， 比如有可能是sh指向了dash导致出错。 通过下面的语句查看。
ls -l `which sh`  脚本解释器在语法上的不同点  从传统的bash等shell换到zsh时会发现集合的第一个元素的索引是从1开始的， 如果希望从0开始，在配置文件中配置下面语句即可。
 Fix array index for zsh:  if [ &amp;#34;$ZSH_NAME&amp;#34; = &amp;#34;zsh&amp;#34; ];then setopt localoptions ksharrays fi 配置zsh shell 与bash shell的.</description>
    </item>
    
  </channel>
</rss>