<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fish shell | xin iDEA iNNATA</title>
    <link>https://xinii.cf/ja/tag/fish-shell/</link>
      <atom:link href="https://xinii.cf/ja/tag/fish-shell/index.xml" rel="self" type="application/rss+xml" />
    <description>Fish shell</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>ja-jp</language><copyright>© 2020 xin iDEA iNNATA</copyright><lastBuildDate>Tue, 30 Jun 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://xinii.cf/images/logo_hu4469573970495a9d28444639a51ce6fc_83092_300x300_fit_lanczos_2.png</url>
      <title>Fish shell</title>
      <link>https://xinii.cf/ja/tag/fish-shell/</link>
    </image>
    
    <item>
      <title>A reasonable configuration tool for your unified working environment</title>
      <link>https://xinii.cf/ja/project/xinconfig/</link>
      <pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/ja/project/xinconfig/</guid>
      <description></description>
    </item>
    
    <item>
      <title>FishとEmacsのためのaptリポジトリ追加</title>
      <link>https://xinii.cf/ja/post/add-apt-repository-for-fish-and-emacs/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/ja/post/add-apt-repository-for-fish-and-emacs/</guid>
      <description>
&lt;p&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-1&#34;&gt;使う予定のコマンド&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-2&#34;&gt;このコマンドがない？以下のようにコマンドを入れる&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-3&#34;&gt;以下のステップに従ってインストール&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-4&#34;&gt;リポジトリを登録&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-5&#34;&gt;リポジトリを更新&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-6&#34;&gt;必要なものをインストール&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
使う予定のコマンド
&lt;/h2&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  add-apt-repository&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
このコマンドがない？以下のようにコマンドを入れる
&lt;/h2&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  apt install software-properties-common&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
以下のステップに従ってインストール
&lt;/h2&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
リポジトリを登録
&lt;/h3&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  add-apt-repository ppa:kelleyk/emacs
  apt-add-repository ppa:fish-shell/release-3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
リポジトリを更新
&lt;/h3&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  apt update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
必要なものをインストール
&lt;/h3&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  apt install emacs26
  apt install fish&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>僕のシェル移行記録</title>
      <link>https://xinii.cf/ja/post/my-shell-migration-record/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/ja/post/my-shell-migration-record/</guid>
      <description>
&lt;p&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-1&#34;&gt;BashからZ shell（zsh）に&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-2&#34;&gt;インストール作業&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-3&#34;&gt;注意点&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-4&#34;&gt;zshのコンフィグレーションについて&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-5&#34;&gt;zshからFish shell（fish）に&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-6&#34;&gt;fishのインストール作業&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-7&#34;&gt;フォルトシェルの変更&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-8&#34;&gt;fishのコンフィグレーションファイル&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-9&#34;&gt;fishを使うときに出てきたPythonに関する環境変数の関連問題&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
BashからZ shell（zsh）に
&lt;/h2&gt;
&lt;p&gt;
zshを使って二週間くらい経ったらFish shellに乗り換えた。
理由については後述するけど，
zshが素晴らしいシェルで使いにくいなどの理由で乗り換えたわけでもない。
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
インストール作業
&lt;/h3&gt;
&lt;p&gt;
zshをインストールするには，以下のコマンドを使う。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
macOS
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  brew install zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
UbuntuやLinux Mint
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  apt install zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
現在のシステムにインストールされているシェルを確認したい場合は以下のコマンドを使う。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  cat /etc/shells&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
システムのデフォルトシェルをzshに変更するには，以下のコマンドを使う。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  chsh -s /usr/local/bin/zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
注意点
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
コンフィグレーションの読み込みエラーについて
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
シェルスクリプトが時々エラーになったときに，
現在の環境の &lt;code class=&#34;verbatim&#34;&gt;sh&lt;/code&gt; のパスを確認しおいたほうが良いかも。
例えば， &lt;code class=&#34;verbatim&#34;&gt;sh&lt;/code&gt; が &lt;code class=&#34;verbatim&#34;&gt;dash&lt;/code&gt; にリンクされている原因でエラーになった可能性がある。
以下のコマンドで確認する。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  ls -l &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;which sh&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
スクリプトのコンパイラーにおけるBashの文法との相違点
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
配列のインデックスにおける文法的なルールについては，
Bashの場合は，配列にある最初の要素が0から始まり，
zshの場合は，1から始まる。
zshに乗り換えたらなかなか慣れられない場合は，
以下のような内容をコンフィグレーションファイルに設定しておけば，
Bashの文法のように，配列が0から始まるようになる。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ZSH_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zsh&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      setopt localoptions ksharrays
  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
zshのコンフィグレーションについて
&lt;/h3&gt;
&lt;p&gt;
Bashの &lt;code class=&#34;verbatim&#34;&gt;.bashrc&lt;/code&gt; と同じ， zshもコンフィグレーションファイルが必要。
デフォルトでは，ホームディレクトリにある &lt;code class=&#34;verbatim&#34;&gt;.zshrc&lt;/code&gt; のファイルになる。
&lt;a href=&#34;https://github.com/xinii/xinconfig/blob/master/profile/core/zsh.sh&#34;&gt;ここをクリック&lt;/a&gt;することで，僕がGithubにアップロードしたコンフィグレーションファイルを参照する。
&lt;/p&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
zshからFish shell（fish）に
&lt;/h2&gt;
&lt;p&gt;
前述のように，zshを使用して二週間の後にfishに乗り換えた。
その理由は，fishに設定とかなにもやらなくてもデフォルトで十分使える。
fishに乗り換えたら，シェルの移行が一段落になり，以下はその記録。
&lt;/p&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
fishのインストール作業
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
macOS:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  brew install fish&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
UbuntuやLinux Mint:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  apt install fish&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
openSUSE:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  sudo zypper install fish&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
ここで，WindowsのLinuxサブシステムであるopenSUSE環境の場合は，
デフォルトで &lt;code&gt;root&lt;/code&gt; の権限が必要なので，コマンドの最初に &lt;code&gt;sudo&lt;/code&gt; をつけておく。
&lt;/p&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
フォルトシェルの変更
&lt;/h3&gt;
&lt;p&gt;
以下のコマンドで行う。パーミッションが足りない場合は &lt;code&gt;sudo&lt;/code&gt; を使う。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  chsh -s /usr/bin/fish&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
これで，デフォルトシェルの切り替えができた。
いったん現在のセッションをログアウトし，再ログインするとfishに入るはず。
&lt;/p&gt;
&lt;p&gt;
ここで，もしfishに入ったら， &lt;code class=&#34;verbatim&#34;&gt;hostname&lt;/code&gt; などのエラーがたくさん出た場合は，
現在の環境に &lt;code class=&#34;verbatim&#34;&gt;hostname&lt;/code&gt; というパッケージが足りないということがわかる。
ソースからコンパイルするか，
使われているLinuxディストリビューションのパッケージマネージャを使って &lt;code class=&#34;verbatim&#34;&gt;hostname&lt;/code&gt; を入れる。
&lt;/p&gt;
&lt;p&gt;
例えば，openSUSEの場合は以下のコマンドを使う。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  sudo zypper install hostname&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-8&#34;&gt;
fishのコンフィグレーションファイル
&lt;/h3&gt;
&lt;p&gt;
zshと同じ，僕が書いたコンフィグレーションファイルをGithubにアップロードしてあるので，
&lt;a href=&#34;https://github.com/xinii/xinconfig/tree/master/profile/fish&#34;&gt;ここをクリック&lt;/a&gt;することで参照しよう。
&lt;/p&gt;
&lt;h3 id=&#34;headline-9&#34;&gt;
fishを使うときに出てきたPythonに関する環境変数の関連問題
&lt;/h3&gt;
&lt;p&gt;
僕がはまったところが以下二点がある。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
tmux
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
tmuxがバックグラウンドで動いているセッションがある場合は，
&lt;code class=&#34;verbatim&#34;&gt;PYTHONPATH&lt;/code&gt; の環境変数を変更しても更新されない。
このときに，すべてのtmuxセッションを閉じてから環境変数の変更が有効になる。
fishシェル以外もこの問題に遭遇されると想定できるが，
僕は今回fishにおいて初めてはまったので記録を残す。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;PYTHONPATH&lt;/code&gt; について
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
fishにおいて環境変数を定義する時にやり方は以下に示された。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;set &amp;lt;variable_name&amp;gt; &amp;lt;parameter_1&amp;gt; &amp;lt;parameter_2&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
このやり方はとても便利で優越性がある。
ただし， &lt;code class=&#34;verbatim&#34;&gt;PYTHONPATH&lt;/code&gt; を設定する場合は，以下のように行ったほうが良い。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;set PYTHONPATH &amp;lt;parameter_1&amp;gt;:&amp;lt;parameter_2&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
なぜかというと，簡単にテストした結果，
macOSでは，二つの方法がどっちでも目的に達成できる。
Jetson Nanoに動いているUbuntuでは，二番目の方法しか機能しない。
具体的な原因は確認しなかったが，
OSが異なって，Pythonのバージョンが同じでも，
CPUがx86かarmかによってコンパイル方法が異なったことでエラーになるかと考えている。
いったんここに記録し，引き続き調査。
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
