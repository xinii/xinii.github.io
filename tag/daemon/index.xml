<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Daemon | xin iDEA iNNATA</title>
    <link>https://xinii.cf/tag/daemon/</link>
      <atom:link href="https://xinii.cf/tag/daemon/index.xml" rel="self" type="application/rss+xml" />
    <description>Daemon</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>ja-jp</language><copyright>© 2020 xin iDEA iNNATA</copyright><lastBuildDate>Wed, 03 Jun 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://xinii.cf/images/icon_huc6d37f8d5848c4cf0bbdc638499793df_110525_512x512_fill_lanczos_center_2.png</url>
      <title>Daemon</title>
      <link>https://xinii.cf/tag/daemon/</link>
    </image>
    
    <item>
      <title>いくつかのSSH設定</title>
      <link>https://xinii.cf/post/several-ssh-configurations/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/post/several-ssh-configurations/</guid>
      <description>
&lt;p&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-1&#34;&gt;SSHの途切れる現象&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-2&#34;&gt;やり方&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-3&#34;&gt;その他&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-4&#34;&gt;アンドロイドのTermuxアプリを使ってSSHデーモンを立てる&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-5&#34;&gt;インストール&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-6&#34;&gt;キーを設定する&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-7&#34;&gt;デバッグモードをデーモンを起動&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-8&#34;&gt;デーモンを起動&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-9&#34;&gt;パソコンで立てたデーモンにログイン&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
SSHの途切れる現象
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
SSHを使ってリモートサーバーにログインしている時に，一定の時間内に操作がなければ，
&lt;code class=&#34;verbatim&#34;&gt;Write failed: Broken pipe&lt;/code&gt; というエラーが出てきてしまう可能性がある。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
以上のことを避けるために，クライアント側やサーバー側のSSH設定を変える必要がある。
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
やり方
&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
クライアント側で対処する
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;/etc/ssh/ssh_config&lt;/code&gt; あるいは
&lt;code class=&#34;verbatim&#34;&gt;~/.ssh/config&lt;/code&gt; に以下の内容を記述する。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  ServerAliveInterval &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;
  ServerAliveCountMax &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
この設定は，15秒ごとに10回の応答が送信されることを意味する。
それでも応答がなければ接続が切断される。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
サーバー側で対処する
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
以下の内容を &lt;code class=&#34;verbatim&#34;&gt;/etc/ssh/sshd_config&lt;/code&gt; に記述する。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  ClientAliveInterval &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;
  ClientAliveCountMax &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
この設定は，30秒ごとに5回の応答が送信されることを意味する。
それでも応答がなければ接続が切断される。
&lt;/p&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
その他
&lt;/h3&gt;
&lt;p&gt;
SSHを使う際にtmuxやscreenなどを使うことがおすすめ。
これで，リモートへの接続が途切れたとしても，
リモートに再びログインした後にすでにあるセッションにattachすれば元の環境が戻ってくる。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
アンドロイドのTermuxアプリを使ってSSHデーモンを立てる
&lt;/h2&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
インストール
&lt;/h3&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  apt install openssh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
キーを設定する
&lt;/h3&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  ssh-keygen
  cat ~/.ssh/id_rsa.pub &amp;gt; ~/.ssh/authorized_keys
  chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt; ~/.ssh/authorized_keys
  chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;700&lt;/span&gt; ~/.ssh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
デバッグモードをデーモンを起動
&lt;/h3&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  sshd -d&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-8&#34;&gt;
デーモンを起動
&lt;/h3&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  sshd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-9&#34;&gt;
パソコンで立てたデーモンにログイン
&lt;/h3&gt;
&lt;p&gt;
アンドロイドで生成されたプライベートキー &lt;code class=&#34;verbatim&#34;&gt;~/.ssh/id_rsa&lt;/code&gt; をパソコン側のsshクライアントに設定し，
アンドロードのIPアドレスにポート &lt;code class=&#34;verbatim&#34;&gt;8022&lt;/code&gt; を加えてユーザ名なしで接続すれば良い。
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
