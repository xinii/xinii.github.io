<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>投稿一覧 | xin iDEA iNNATA</title>
    <link>https://xinii.cf/post/</link>
      <atom:link href="https://xinii.cf/post/index.xml" rel="self" type="application/rss+xml" />
    <description>投稿一覧</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>ja-jp</language><copyright>© 2020 xin iDEA iNNATA</copyright><lastBuildDate>Thu, 04 Jun 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://xinii.cf/images/icon_huc6d37f8d5848c4cf0bbdc638499793df_110525_512x512_fill_lanczos_center_2.png</url>
      <title>投稿一覧</title>
      <link>https://xinii.cf/post/</link>
    </image>
    
    <item>
      <title>Windows 10をクリーンインストールした後の作業</title>
      <link>https://xinii.cf/post/some-installations-for-windows-10/</link>
      <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/post/some-installations-for-windows-10/</guid>
      <description>
&lt;p&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-1&#34;&gt;Windows 10のアクティベーション&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-2&#34;&gt;いくつか便利のツールをインストールする&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-3&#34;&gt;msys2を設定する&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Windows 10のアクティベーション
&lt;/h2&gt;
&lt;p&gt;
&lt;code&gt;cmd&lt;/code&gt; を開く
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;slmgr -ipk &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;your product key&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
slmgr -skms &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;kms server address of your company&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
slmgr -ato&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
いくつか便利のツールをインストールする
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.msys2.org/&#34;&gt;Msys2&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.autohotkey.com/&#34;&gt;AutoHotKey&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/edihbrandon/RictyDiminished&#34;&gt;Ricty&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
msys2を設定する
&lt;/h2&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;pacman -S git fish tmux emacs gcc python
cd ~
git clone https://github.com/xinii/xinconfig .xinconfig
cd .xinconfig
./setenv fish
exec fish
set_conf tmux
set_el auto
set_el cn
change_emacs xin
emacs
ssh-keygen -A
emacs /etc/ssh/sshd_config
 &lt;span style=&#34;color:#75715e&#34;&gt;#Port ****&lt;/span&gt;
 &lt;span style=&#34;color:#75715e&#34;&gt;#PasswordAuthentication no&lt;/span&gt;
cat &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;path to your pub key&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &amp;gt; ~/.ssh/authorized_keys
chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt; ~/.ssh/authorized_keys
chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;700&lt;/span&gt; ~/.ssh
/usr/bin/sshd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>より効率的な作業を行うためのいくつかWindowsのレジストリー設定</title>
      <link>https://xinii.cf/post/several-windows-registry-configurations/</link>
      <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/post/several-windows-registry-configurations/</guid>
      <description>
&lt;p&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-1&#34;&gt;日本語キーボードのレイアウトに関するレジストリー設定&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-2&#34;&gt;スキャンコードについて&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-3&#34;&gt;スキャンコードの例&lt;sup class=&#34;footnote-reference&#34;&gt;1&lt;/sup&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-4&#34;&gt;レジストリーでスキャンコードのマッピングを行うためには&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-5&#34;&gt;キーボードレイアウトの種類を変更&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-6&#34;&gt;中国語入力において英語配列から日本語配列に&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-7&#34;&gt;他の言語の入力法において〇〇配列から〇〇配列に&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-8&#34;&gt;「マイコンピュータ」や「PC」の画面に不明なアイコンが出た時のレジストリー設定&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-9&#34;&gt;どうしてもローカルネットワークのNASとかに繋がらない時のレジストリー設定&lt;sup class=&#34;footnote-reference&#34;&gt;2&lt;/sup&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-10&#34;&gt;参考資料&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
日本語キーボードのレイアウトに関するレジストリー設定
&lt;/h2&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
スキャンコードについて
&lt;/h3&gt;
&lt;p&gt;
まずは，ウィキペディアに載せたスキャンコードの定義を見よう
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
スキャンコード (scancode)
  とは、コンピュータのキーボードのキーが押されたり離されたりしたときに、
  キーボードからCPUに送られるコード（符号）のこと。走査コード（そうさコード）ともいう。 - &lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3%E3%82%B3%E3%83%BC%E3%83%89&#34;&gt;Wikipedia&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
スキャンコードの例&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;キー&lt;/th&gt;
&lt;th&gt;コード&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;RCtrl&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;1D E0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LAlt&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;38 00&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RAlt&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;38 E0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ESC&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;01 00&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Insert&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;52 E0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Enter&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;1C 00&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Caps&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;3A 00&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Space&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;39 00&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;無変換&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;7B 00&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;変換&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;79 00&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
レジストリーでスキャンコードのマッピングを行うためには
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
まず， &lt;code class=&#34;verbatim&#34;&gt;Win key&lt;/code&gt; + &lt;code class=&#34;verbatim&#34;&gt;R&lt;/code&gt; を押して &lt;code class=&#34;verbatim&#34;&gt;regedit&lt;/code&gt; を入力したら &lt;code class=&#34;verbatim&#34;&gt;Enter&lt;/code&gt; キーを押す。
そうすると，Windowsのレジストリーエディターが開かれたはず。
そこでレジストリーエディターで以下の場所を開く。
&lt;/p&gt;
&lt;div class=&#34;src src-sample&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-sample&#34; data-lang=&#34;sample&#34;&gt;  コンピューター\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
次に，右クリックしたら，「新規 - バイナリ値(B) - Scancode
Map」の順に「Scancode Map」というバイナリキーを作る。
&lt;/p&gt;
&lt;p&gt;
「Scancode Map」のバリュー（マッピングのルール）については，
以下のような僕の設定を参考していじってみればいいと思う。
ただし，「バージョン」，「フラグ」と「終端ヌル値」の部分は残る必要がある。
あと，「マッピング数」については，「終端ヌル値」も含めて設定したマッピングルールの数を数えて書けば良い。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Logicool K380のための自分用レイアウト
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Index&lt;/th&gt;
&lt;th&gt;Scancode&lt;/th&gt;
&lt;th&gt;意味&lt;/th&gt;
&lt;th&gt;Scancode&lt;/th&gt;
&lt;th&gt;意味&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;0000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;00 00 00 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;バージョン&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;00 00 00 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;フラグ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;0008&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;08 00 00 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マッピング数&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;1D 00 3A 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;LCtrl &amp;lt;- Caps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;0010&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;3A 00 1D 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Caps &amp;lt;- LCtrl&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;1D E0 38 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;RCtrl &amp;lt;- LAlt&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;0018&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;38 00 7B 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;LAlt &amp;lt;- 無変換&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;38 E0 70 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;RAlt &amp;lt;- かなキー&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;0020&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;39 00 79 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Space &amp;lt;- 変換&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;01 00 38 E0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ESC &amp;lt;- RAlt&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;0028&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;00 00 00 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;終端ヌル値&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
FILCO Majestouch MINILA Airのための自分用レイアウト
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Index&lt;/th&gt;
&lt;th&gt;Scancode&lt;/th&gt;
&lt;th&gt;意味&lt;/th&gt;
&lt;th&gt;Scancode&lt;/th&gt;
&lt;th&gt;意味&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;0000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;00 00 00 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;バージョン&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;00 00 00 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;フラグ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;0008&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;0B 00 00 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マッピング数&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;1C 00 52 E0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Enter &amp;lt;- Insert&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;0010&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;1D E0 38 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;RCtrl &amp;lt;- LAlt&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;1D E0 70 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;RCtrl &amp;lt;- かな&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;0018&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;7B 00 46 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;無変換 &amp;lt;- ScrLk&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;79 00 1D E1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;変換 &amp;lt;- Pause&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;0020&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;00 00 45 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;なし &amp;lt;- NumLock&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;00 00 9D E1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;なし &amp;lt;- Break&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;0028&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;38 00 7B 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;LAlt &amp;lt;- 無変換&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;01 00 79 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ESC &amp;lt;- 変換&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;0030&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;52 E0 29 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Insert &amp;lt;- E/J&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;00 00 00 00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;終端ヌル値&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
ここで，「Pause/Break」がいつくかのコードで組み合わせたもので，
「NumLock」のコードも入っているため，
以上のように設定する時に少し工夫をした。 以下も参考
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Pause &lt;code&gt;0xE1:0x1D:0x45&lt;/code&gt; [ 84key &lt;code&gt;Ctrl&lt;/code&gt; (0x1D) + &lt;code&gt;NumLock&lt;/code&gt; (0x45)], no auto repeat,
break code &lt;code&gt;0xE1:0x9D:0xC5&lt;/code&gt; - &lt;a href=&#34;https://seesaawiki.jp/w/smnb/d/Keyboard%20Scancode%20Map&#34;&gt;Keyboard Scancode Map&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
キーボードレイアウトの種類を変更
&lt;/h2&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
中国語入力において英語配列から日本語配列に
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
まずは，レジストリーエディターで以下の場所を開く
&lt;/p&gt;
&lt;div class=&#34;src src-sample&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-sample&#34; data-lang=&#34;sample&#34;&gt;  コンピューター\HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Keyboard Layouts\00000804&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
次に，以下のように変更をする
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;キーの名前&lt;/th&gt;
&lt;th&gt;変更前&lt;/th&gt;
&lt;th&gt;変更後&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;Layout File&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;KBDUS.DLL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;KBD106.DLL&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
他の言語の入力法において〇〇配列から〇〇配列に
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
他の言語の入力法の場合は，レジストリーのパスの=00000804=のところを変更し，
変更後の=***.DLL=の部分に適切な内容で入れ替えたら良いと思う。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;headline-8&#34;&gt;
「マイコンピュータ」や「PC」の画面に不明なアイコンが出た時のレジストリー設定
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
以下のレジストリーのパスに，その不明なものを探して見つけたら見つけたものを削除すれば良い
&lt;/p&gt;
&lt;div class=&#34;src src-sample&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-sample&#34; data-lang=&#34;sample&#34;&gt;  コンピューター\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;headline-9&#34;&gt;
どうしてもローカルネットワークのNASとかに繋がらない時のレジストリー設定&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-2&#34; href=&#34;#footnote-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
まずは，以下の場所を開く
&lt;/p&gt;
&lt;div class=&#34;src src-sample&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-sample&#34; data-lang=&#34;sample&#34;&gt;  コンピューター\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
次に，下のような変更を行う
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;キーの名前&lt;/th&gt;
&lt;th&gt;変更前&lt;/th&gt;
&lt;th&gt;変更後&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;AllowInsecureGuestAuth&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&#34;verbatim&#34;&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;headline-10&#34;&gt;
参考資料
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://usedoor.jp/howto/digital/pc/windows-uwagaki-keyboard-insert-key-mukouka/&#34;&gt;上書きモードになる『Insert』キーを無効化する方法&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://tepp91.github.io/contents/misc/remap-keyboard-with-scancode-map.html&#34;&gt;Scancode Mapによるキー割り当ての変更&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://answers.microsoft.com/en-us/windows/forum/windows_10-files/homegroup-removed-how-to-get-network-sharing-work/01277332-2916-4a68-853a-116696b20743&#34;&gt;Homegroup removed! How to get network sharing work with Windows 10 v1803&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-1&#34;&gt;&lt;a href=&#34;#footnote-reference-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;
&lt;a href=&#34;http://softwaretechnique.jp/OS_Development/Tips/scan_code_set1.html&#34;&gt;スキャンコード一覧（スキャンコードセット1）&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-2&#34;&gt;&lt;a href=&#34;#footnote-reference-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.nedia.ne.jp/blog/2019/04/02/13919&#34;&gt;NASに接続できない！原因はSMB1.0ではなかった！&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>FishとEmacsのためのaptリポジトリ追加</title>
      <link>https://xinii.cf/post/add-apt-repository-for-fish-and-emacs/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/post/add-apt-repository-for-fish-and-emacs/</guid>
      <description>
&lt;p&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-1&#34;&gt;使う予定のコマンド&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-2&#34;&gt;このコマンドがない？以下のようにコマンドを入れる&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-3&#34;&gt;以下のステップに従ってインストール&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-4&#34;&gt;リポジトリを登録&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-5&#34;&gt;リポジトリを更新&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-6&#34;&gt;必要なものをインストール&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
使う予定のコマンド
&lt;/h2&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  add-apt-repository&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
このコマンドがない？以下のようにコマンドを入れる
&lt;/h2&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  apt install software-properties-common&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
以下のステップに従ってインストール
&lt;/h2&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
リポジトリを登録
&lt;/h3&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  add-apt-repository ppa:kelleyk/emacs
  apt-add-repository ppa:fish-shell/release-3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
リポジトリを更新
&lt;/h3&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  apt update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
必要なものをインストール
&lt;/h3&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  apt install emacs26
  apt install fish&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>いくつかのSSH設定</title>
      <link>https://xinii.cf/post/several-ssh-configurations/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/post/several-ssh-configurations/</guid>
      <description>
&lt;p&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-1&#34;&gt;SSHの途切れる現象&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-2&#34;&gt;やり方&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-3&#34;&gt;その他&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-4&#34;&gt;アンドロイドのTermuxアプリを使ってSSHデーモンを立てる&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-5&#34;&gt;インストール&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-6&#34;&gt;キーを設定する&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-7&#34;&gt;デバッグモードをデーモンを起動&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-8&#34;&gt;デーモンを起動&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-9&#34;&gt;パソコンで立てたデーモンにログイン&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
SSHの途切れる現象
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
SSHを使ってリモートサーバーにログインしている時に，一定の時間内に操作がなければ，
&lt;code class=&#34;verbatim&#34;&gt;Write failed: Broken pipe&lt;/code&gt; というエラーが出てきてしまう可能性がある。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
以上のことを避けるために，クライアント側やサーバー側のSSH設定を変える必要がある。
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
やり方
&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
クライアント側で対処する
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;/etc/ssh/ssh_config&lt;/code&gt; あるいは
&lt;code class=&#34;verbatim&#34;&gt;~/.ssh/config&lt;/code&gt; に以下の内容を記述する。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  ServerAliveInterval &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;
  ServerAliveCountMax &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
この設定は，15秒ごとに10回の応答が送信されることを意味する。
それでも応答がなければ接続が切断される。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
サーバー側で対処する
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
以下の内容を &lt;code class=&#34;verbatim&#34;&gt;/etc/ssh/sshd_config&lt;/code&gt; に記述する。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  ClientAliveInterval &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;
  ClientAliveCountMax &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
この設定は，30秒ごとに5回の応答が送信されることを意味する。
それでも応答がなければ接続が切断される。
&lt;/p&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
その他
&lt;/h3&gt;
&lt;p&gt;
SSHを使う際にtmuxやscreenなどを使うことがおすすめ。
これで，リモートへの接続が途切れたとしても，
リモートに再びログインした後にすでにあるセッションにattachすれば元の環境が戻ってくる。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
アンドロイドのTermuxアプリを使ってSSHデーモンを立てる
&lt;/h2&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
インストール
&lt;/h3&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  apt install openssh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
キーを設定する
&lt;/h3&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  ssh-keygen
  cat ~/.ssh/id_rsa.pub &amp;gt; ~/.ssh/authorized_keys
  chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt; ~/.ssh/authorized_keys
  chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;700&lt;/span&gt; ~/.ssh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
デバッグモードをデーモンを起動
&lt;/h3&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  sshd -d&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-8&#34;&gt;
デーモンを起動
&lt;/h3&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  sshd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-9&#34;&gt;
パソコンで立てたデーモンにログイン
&lt;/h3&gt;
&lt;p&gt;
アンドロイドで生成されたプライベートキー &lt;code class=&#34;verbatim&#34;&gt;~/.ssh/id_rsa&lt;/code&gt; をパソコン側のsshクライアントに設定し，
アンドロードのIPアドレスにポート &lt;code class=&#34;verbatim&#34;&gt;8022&lt;/code&gt; を加えてユーザ名なしで接続すれば良い。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>EmacsのOrg-modeにおいてPythonコードブロックを使った時の落とし穴</title>
      <link>https://xinii.cf/post/single-language/pitfall-while-using-python-code-block-on-emacs-org-mode/</link>
      <pubDate>Sat, 23 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/post/single-language/pitfall-while-using-python-code-block-on-emacs-org-mode/</guid>
      <description>&lt;p&gt;
僕は家計簿をOrg-modeで記録していて，
その中にPythonのコードを書き，実行とかをやっている。
しかし，以下のエラーになったことがある。
&lt;/p&gt;
&lt;div class=&#34;src src-sample&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-sample&#34; data-lang=&#34;sample&#34;&gt;File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 3
SyntaxError: Non-UTF-8 code starting with &amp;#39;\xe3&amp;#39; in file &amp;lt;stdin&amp;gt; on line 3, but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
考えられるのは， &lt;code&gt;# -*- coding: utf-8 -*-&lt;/code&gt; を先頭につけることしかないけど，
結局 &lt;strong&gt;Org-modeの中のPythonのコードブロック&lt;/strong&gt; なら効かなかった。
&lt;/p&gt;
&lt;p&gt;
解決法は以下のようなコードブロックのヘッダーを，
&lt;/p&gt;
&lt;div class=&#34;src src-sample&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-sample&#34; data-lang=&#34;sample&#34;&gt;#+begin_src python :results file :var data=test&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
以下のように変換する
&lt;/p&gt;
&lt;div class=&#34;src src-sample&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-sample&#34; data-lang=&#34;sample&#34;&gt;#+begin_src python :results file :var data=test[, 0:2]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
すなわち，必須となる数字や日付などが入っているテーブルの列だけを
Pythonに転送すると，一時的なエラーを解消できるけど，
本質的には解決していない。
&lt;/p&gt;
&lt;p&gt;
引き続き調査。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>pLaTeXを使う際に扱うepsグラフに関する落とし穴</title>
      <link>https://xinii.cf/post/single-language/pitfall-while-inserting-figure-into-latex-article/</link>
      <pubDate>Sat, 23 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/post/single-language/pitfall-while-inserting-figure-into-latex-article/</guid>
      <description>&lt;p&gt;
pLaTeXを使う際に，なぜか特定のepsグラフを文書のソースに入れたらビルドが失敗。
しかも失敗した時のログをみると，まったく問題を特定できない。
&lt;/p&gt;
&lt;p&gt;
例えば，入れたすべてのfigureの定義が見つからないとかに関するエラー。
このようなエラーになった時に，
epsグラフのスケールを正方形に近い形状から矩形にしたら，
問題解決できた。
&lt;/p&gt;
&lt;p&gt;
原因はまだ不明だけど，また調査してみる。
たまにハマってしまったので，ここにメモを残っておく。
&lt;/p&gt;
&lt;p&gt;
以上。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>EmacsとLilypondで楽譜生成</title>
      <link>https://xinii.cf/post/single-language/generate-sheet-music-with-lilypond-on-emacs/</link>
      <pubDate>Sat, 16 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/post/single-language/generate-sheet-music-with-lilypond-on-emacs/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
コード例
&lt;/h2&gt;
&lt;div class=&#34;src src-lilypond&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-lilypond&#34; data-lang=&#34;lilypond&#34;&gt;  \version &amp;#34;2.18.2&amp;#34;

  \score {
    \new Staff &amp;lt;&amp;lt;
      \new Voice \relative c&amp;#39;&amp;#39;&amp;#39; {
        \set midiInstrument = #&amp;#34;flute&amp;#34;
        \voiceOne
        \key g \major
        \time 2/2
        r2 g-&amp;#34;Flute&amp;#34; ~
        g fis ~
        fis4 g8 fis e2 ~
        e4 d8 cis d2
      }
      \new Voice \relative c&amp;#39;&amp;#39; {
        \set midiInstrument = #&amp;#34;clarinet&amp;#34;
        \voiceTwo
        b1-&amp;#34;Clarinet&amp;#34;
        a2. b8 a
        g2. fis8 e
        fis2 r
      }
    &amp;gt;&amp;gt;
    \layout { }
    \midi {
      \context {
        \Staff
        \remove &amp;#34;Staff_performer&amp;#34;
      }
      \context {
        \Voice
        \consists &amp;#34;Staff_performer&amp;#34;      
      }
      \context {
        \Score
        tempoWholesPerMinute = #(ly:make-moment 72 2)
      }
    }
  }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
出力例
&lt;/h2&gt;
&lt;p&gt;
（後で追加）
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>絶対音感について</title>
      <link>https://xinii.cf/post/single-language/about-absolute-pitch/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/post/single-language/about-absolute-pitch/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
音階と音の周波数
&lt;/h2&gt;
&lt;p&gt;
次の表に，ピアノの鍵盤における88のキーに相応する音の周波数を示す。
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;align-right&#34;&gt;鍵盤番号&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;周波数(Hz)&lt;/th&gt;
&lt;th&gt;階名&lt;/th&gt;
&lt;th&gt;音名&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;27.500&lt;/td&gt;
&lt;td&gt;ラ&lt;/td&gt;
&lt;td&gt;A0（イ）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;…&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;37&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;220.000&lt;/td&gt;
&lt;td&gt;ラ&lt;/td&gt;
&lt;td&gt;A3（イ）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;38&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;233.082&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;A#3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;39&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;246.942&lt;/td&gt;
&lt;td&gt;シ&lt;/td&gt;
&lt;td&gt;B3（ロ）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;40&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;261.626&lt;/td&gt;
&lt;td&gt;ド&lt;/td&gt;
&lt;td&gt;C4（ハ）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;41&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;277.183&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;C#4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;42&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;293.665&lt;/td&gt;
&lt;td&gt;レ&lt;/td&gt;
&lt;td&gt;D4（ニ）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;43&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;311.127&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;D#4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;44&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;329.628&lt;/td&gt;
&lt;td&gt;ミ&lt;/td&gt;
&lt;td&gt;E4（ホ）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;45&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;349.228&lt;/td&gt;
&lt;td&gt;ファ&lt;/td&gt;
&lt;td&gt;F4（ヘ）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;46&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;369.994&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F#4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;47&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;391.995&lt;/td&gt;
&lt;td&gt;ソ&lt;/td&gt;
&lt;td&gt;G4（ト）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;48&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;415.305&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;G#4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;49&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;440.000&lt;/td&gt;
&lt;td&gt;ラ&lt;/td&gt;
&lt;td&gt;A4（イ）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;50&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;466.164&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;A#4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;51&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;493.883&lt;/td&gt;
&lt;td&gt;シ&lt;/td&gt;
&lt;td&gt;B4（ロ）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;52&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;523.251&lt;/td&gt;
&lt;td&gt;ド&lt;/td&gt;
&lt;td&gt;C5（ハ）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;…&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;88&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4186.009&lt;/td&gt;
&lt;td&gt;ド&lt;/td&gt;
&lt;td&gt;C8（ハ）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
音の周波数を等比数列 $a_0, a_1, a_2 \dots a_{12}$ とし，
公比を $r$ とすると，以下の関係がある。
&lt;/p&gt;
&lt;p&gt;
$$a_{12} = a_{0} \times r^{12} = a_0 \times 2$$
&lt;/p&gt;
&lt;p&gt;
また，1オクターブの二つの音の周波数が2倍の関係なので，
以下の式によって公比\(r\)がわかるようになる。
&lt;/p&gt;
&lt;p&gt;
$$r^{12} = 2 \Rightarrow r = \sqrt[12]{2} \approx 1.059463094$$
&lt;/p&gt;
&lt;p&gt;
従って，任意の音に対して，\(n\)個半音上の音を計算する方法は以下の式に示す。
&lt;/p&gt;
&lt;p&gt;
$$a_n = a_0 \times r^n = a_0 \times 2^{\frac{n}{12}}$$
&lt;/p&gt;
&lt;p&gt;
以上によると，絶対音感を持っている人が，
任意の一つの音を聞いて，その周波数がわかる。
具体的な数値がわからなくても，
その数値は必ず一つの音名に相応するので，音名がわかる。
これに対して，相対音感が\(a_0\)が必要である。
また，音名が固定だが，階名が変化するものである。
\(a_0\)を任意の音を指定しておく前提なら，
耳の感覚で，他の音を計算するものである。
&lt;/p&gt;
&lt;p&gt;
絶対音感が，5歳くらいまでにトレーニングしないと，
身に着けにくくなるとよく言われている。 これはなぜだろうか。
母国語に似ているものなので， この視点から分析してみる。
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
絶対音感を身に着けるにはなぜ5歳までトレーニングする必要があるか
&lt;/h2&gt;
&lt;p&gt;
ここで，まずいくつかの言語の例をあげてみたい。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
言語に関する時間
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
言語に関する意味
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
言語に関する発音
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
（未完成… 時間がある時に続いて書く）
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Jetson NanoにOpenCVをインストール</title>
      <link>https://xinii.cf/post/install-opencv-on-jetson-nano/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/post/install-opencv-on-jetson-nano/</guid>
      <description>
&lt;p&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-1&#34;&gt;swapファイルを生成&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-2&#34;&gt;インストールのスクリプトを生成&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-3&#34;&gt;スクリプトを実行する&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-4&#34;&gt;インストールされたOpenCVをテスト&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
swapファイルを生成
&lt;/h2&gt;
&lt;p&gt;
コンパイル途中にメモリー不足などの問題を防ぐため，
swapという交換用ファイルを任意のパスに生成しておく。
このファイルは，OS再起動の後に自動的に消えるが，
全てのインストールが終わったら，手作業で交換用ファイルを削除しても良い。
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;  $ fallocate -l 4G swapfile
  $ chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt; swapfile
  $ mkswap swapfile
  $ sudo swapon swapfile
  $ swapon -s&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
インストールのスクリプトを生成
&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/AastaNV/JEP/blob/master/script/install_opencv4.0.0_Nano.sh&#34;&gt;OpenCV 4.0.0をインストールためのリンク&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
以上は，OpenCV 4.0.0をインストールためのリンクで，ここでは，OpenCV
4.1.0をインストールしたいため， バージョン番号の部分に少し手を加える。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash&lt;/span&gt;
  #
  &lt;span style=&#34;color:#75715e&#34;&gt;# Copyright (c) 2018, NVIDIA CORPORATION.  All rights reserved.&lt;/span&gt;
  #
  &lt;span style=&#34;color:#75715e&#34;&gt;# NVIDIA Corporation and its licensors retain all intellectual property&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# and proprietary rights in and to this software, related documentation&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# and any modifications thereto.  Any use, reproduction, disclosure or&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# distribution of this software and related documentation without an express&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# license agreement from NVIDIA Corporation is strictly prohibited.&lt;/span&gt;
  #

  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$#&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -ne &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Usage: &lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt; &amp;lt;Install Folder&amp;gt;&amp;#34;&lt;/span&gt;
      exit
  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
  folder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  user&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nvidia&amp;#34;&lt;/span&gt;
  passwd&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nvidia&amp;#34;&lt;/span&gt;

  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;** Install requirement&amp;#34;&lt;/span&gt;
  sudo apt-get update
  sudo apt-get install -y build-essential cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
  sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
  sudo apt-get install -y python2.7-dev python3.6-dev python-dev python-numpy python3-numpy
  sudo apt-get install -y libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev
  sudo apt-get install -y libv4l-dev v4l-utils qv4l2 v4l2ucp
  sudo apt-get install -y curl
  sudo apt-get update

  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;** Download opencv-4.1.0&amp;#34;&lt;/span&gt;
  cd $folder
  curl -L https://github.com/opencv/opencv/archive/4.1.0.zip -o opencv-4.1.0.zip
  curl -L https://github.com/opencv/opencv_contrib/archive/4.1.0.zip -o opencv_contrib-4.1.0.zip
  unzip opencv-4.1.0.zip 
  unzip opencv_contrib-4.1.0.zip 
  cd opencv-4.1.0/

  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;** Building...&amp;#34;&lt;/span&gt;
  mkdir release
  cd release/
  cmake -D WITH_CUDA&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ON -D CUDA_ARCH_BIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5.3&amp;#34;&lt;/span&gt; -D CUDA_ARCH_PTX&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; -D OPENCV_EXTRA_MODULES_PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;../../opencv_contrib-4.1.0/modules -D WITH_GSTREAMER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ON -D WITH_LIBV4L&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ON -D BUILD_opencv_python2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ON -D BUILD_opencv_python3&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ON -D BUILD_TESTS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;OFF -D BUILD_PERF_TESTS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;OFF -D BUILD_EXAMPLES&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;OFF -D CMAKE_BUILD_TYPE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;RELEASE -D CMAKE_INSTALL_PREFIX&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr/local ..

  make -j3
  sudo make install
  sudo apt-get install -y python-opencv python3-opencv

  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;** Install opencv-4.1.0 successfully&amp;#34;&lt;/span&gt;
  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;** Bye :)&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
以上のスクリプトを &lt;code&gt;sh&lt;/code&gt; のフォーマットで保存する。例えば &lt;code class=&#34;verbatim&#34;&gt;install_opencv4.1.0_Nano.sh&lt;/code&gt; 。
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
スクリプトを実行する
&lt;/h2&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  mkdir opencv
  sh install_opencv4.1.0_Nano.sh opencv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
インストールのプロセスが割と時間かかるため，インストールが終わるまで待つ。
ここで，tmuxとかに任せてバックグラウンドでやれば，なんかあった時にattachすれば済むのでおすすめ。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
インストールされたOpenCVをテスト
&lt;/h2&gt;
&lt;p&gt;
コマンドラインに &lt;code class=&#34;verbatim&#34;&gt;python&lt;/code&gt; を叩くと &lt;code class=&#34;verbatim&#34;&gt;import cv2&lt;/code&gt; をためしたらエラーがなければ終わり。
&lt;/p&gt;
&lt;p&gt;
ただ，pyenvなどのpython環境管理ツールを使っている方なら，
pyenvを使って入れたpythonにおいてはOpenCVを読み込めない場合がある。
解決案としては，OpenCVのライブラーのソフトリンクをpyenvのpythonの下に置くこと。
&lt;/p&gt;
&lt;p&gt;
例えば，以下のようなpyenvのpythonのライブラリーのパスがある。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  /home/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;username&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;/.anyenv/envs/pyenv/versions/3.6.8/lib/python3.6/site-packages&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
また，インストールされたOpenCVのライブラリーのパスが以下となる。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  /usr/local/lib/python3.6/dist-packages/cv2/python-3.6/cv2.cpython-36m-aarch64-linux-gnu.so&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
この場合は，以下のコマンドでソフトリンクを作れる。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  cd /home/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;username&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;/.anyenv/envs/pyenv/versions/3.6.8/lib/python3.6/site-packages
  ln -s /usr/local/lib/python3.6/dist-packages/cv2/python-3.6/cv2.cpython-36m-aarch64-linux-gnu.so ./&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
また，事前にpyenvのpythonのpipを使って，
&lt;code class=&#34;verbatim&#34;&gt;pip install numpy&lt;/code&gt; でnumpyを入れておくと
さっきのように &lt;code class=&#34;verbatim&#34;&gt;import cv2&lt;/code&gt; でテストしてエラーがなければおしまい。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GnutlsをインストールしてソースからEmacsをコンパイル</title>
      <link>https://xinii.cf/post/install-gnutls-and-compile-emacs-from-source/</link>
      <pubDate>Sat, 04 May 2019 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/post/install-gnutls-and-compile-emacs-from-source/</guid>
      <description>
&lt;p&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-1&#34;&gt;今の環境にGnutlsがない場合&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-2&#34;&gt;潜在的なリスク&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-3&#34;&gt;Gnutlsをインストール&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-4&#34;&gt;その他の問題&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
今の環境にGnutlsがない場合
&lt;/h2&gt;
&lt;p&gt;
今の環境にGnutlsがない場合は，ソースからEmacs&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;をコンパイルする時に以下の設定が必要。
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;  ./configure --with-gnutls&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
他にも依存されるライブラリーなどが足りない場合は，例えば以下のように設定をする。
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;  bash configure --prefix&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$HOME/.local --with-gif&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no --with-gnutls&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
これでデフォルトのパスとかへの権限や，ライブラリーが足りない場合でもソースからインストール出来てしまう。
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
潜在的なリスク
&lt;/h2&gt;
&lt;p&gt;
以上のようにEmacsを &lt;code class=&#34;verbatim&#34;&gt;$HOME/.local&lt;/code&gt; へのインストールが出来てしまうけど，
Gnutlsがサポートされないゆえに，Emacsでインターネットが必要となった時にhttpsが使えない。
&lt;/p&gt;
&lt;p&gt;
Emacsが初期化される時だけなら，設定ファイルの中のMelpaリンクを全てhttpに変更すれば済ませるが，
セキュリティ上にあまりお勧めができないし，今後Emacsの拡張機能を使う時のリスクにもなる。
&lt;/p&gt;
&lt;p&gt;
例えば， &lt;code class=&#34;verbatim&#34;&gt;google-translate&lt;/code&gt; のEmacs拡張パッケージを使う場合は，
Emacsのelpaフォルダーにある &lt;code class=&#34;verbatim&#34;&gt;google-translate&lt;/code&gt; の中の全ての &lt;code class=&#34;verbatim&#34;&gt;*.el&lt;/code&gt; にある &lt;code class=&#34;verbatim&#34;&gt;https&lt;/code&gt; を &lt;code class=&#34;verbatim&#34;&gt;http&lt;/code&gt; に書き換えても，
実際に使う時に一部の機能にとっては &lt;code class=&#34;verbatim&#34;&gt;https&lt;/code&gt; が必須で翻訳が正常に機能しない恐れがある。
&lt;/p&gt;
&lt;p&gt;
ここでは， &lt;code class=&#34;verbatim&#34;&gt;*.el&lt;/code&gt; を変更した後に， &lt;code class=&#34;verbatim&#34;&gt;*.elc&lt;/code&gt; を削除しないと変更が反映されない可能性がある。
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Gnutlsをインストール
&lt;/h2&gt;
&lt;p&gt;
以上の問題を解決するもっとも簡単な方法としては，
今の環境にGnutlsをインストールしてからソースからもう一度Emacsをインストールすること。
&lt;/p&gt;
&lt;p&gt;
OpenSUSEを例として，以下のコマンドでGnutlsをインストールする。
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;  sudo zypper install gnutls&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
その他の問題
&lt;/h2&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;  checking &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; library containing tputs... no
  configure: error: The required &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tputs&amp;#39;&lt;/span&gt; was not found in any library.
  The following libraries were tried &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;in order&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
    libtinfo, libncurses, libterminfo, libcurses, libtermcap
  Please try installing whichever of these libraries is most appropriate
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; your system, together with its header files.
  For example, a libncurses-dev&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;el&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; or similar package.
  make: *** No targets specified and no makefile found.  Stop.
  make: *** No rule to make target &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;install&amp;#39;&lt;/span&gt;.  Stop.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
もしすでにGnutlsがインストール済みで， &lt;code class=&#34;verbatim&#34;&gt;make&lt;/code&gt; を叩くと以上のエラーが出てきてしまったら，
OpenSUSE環境の場合は， &lt;code class=&#34;verbatim&#34;&gt;ncurses-devel&lt;/code&gt; というパッケージが必要だということなので，
以下のコマンドで入れておこう。
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;  sudo zypper install ncurses-devel&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-1&#34;&gt;&lt;a href=&#34;#footnote-reference-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;
&lt;a href=&#34;https://ja.wikipedia.org/wiki/Emacs&#34;&gt;The logo of Emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>僕のシェル移行記録</title>
      <link>https://xinii.cf/post/my-shell-migration-record/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/post/my-shell-migration-record/</guid>
      <description>
&lt;p&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-1&#34;&gt;bashからzshに&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#配置zsh-shell&#34;&gt;配置zsh shell&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#从zsh到fish&#34;&gt;zshからfishに&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#fish-shell的安装以及默认shell的切换&#34;&gt;fish shell的安装以及默认shell的切换&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fish的配置&#34;&gt;fish的配置&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#在fish-shell下使用python时的常见问题&#34;&gt;在fish shell下使用python时的常见问题&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
bashからzshに
&lt;/h2&gt;
&lt;p&gt;
虽然我使用zsh shell两周后就换到fish shell了（关于fish
shell下面有专门介绍）， 但这并不否认zsh shell仍然是个很好的shell。
你可以通过下面的方式从任意的shell切换至zsh shell。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
安装zsh时通过下面的指令：
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  brew install zsh &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;MacOS&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  apt install zsh &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Ubuntu / Linux Mint&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
如果你想要知道现在系统裡已经安装好的shell，输入下面的指令：
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  cat /etc/shells&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
如何将zsh作为你默认的shell呢？，输入下面的指令：
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  chsh -s /usr/local/bin/zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
关于配置文件的读取错误
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
shell脚本解释出错时可以查看一下当前所使用的=sh=路径，
比如有可能是=sh=指向了=dash=导致出错。 通过下面的语句查看。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  ls -l &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;which sh&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
脚本解释器在语法上的不同点
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
从传统的bash等shell换到zsh时会发现集合的第一个元素的索引是从1开始的，
如果希望从0开始，在配置文件中配置下面语句即可。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Fix array index for zsh:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ZSH_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zsh&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      setopt localoptions ksharrays
  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;配置zsh-shell&#34;&gt;
配置zsh shell
&lt;/h3&gt;
&lt;p&gt;
与bash shell的=.bashrc=类似，=zsh=的配置也需要一个配置文件，
这个文件是在用户目录下的=.zshrc=文件，点击
&lt;a href=&#34;https://github.com/xinii/xinconfig/blob/master/profile/core/zsh.sh&#34;&gt;这里&lt;/a&gt;
打开我上传到=Github=的配置文件下载使用。
&lt;/p&gt;
&lt;h2 id=&#34;从zsh到fish&#34;&gt;
zshからfishに
&lt;/h2&gt;
&lt;p&gt;
使用zsh shell之后大概两週我就换到fish shell了，
这不是因为zsh不好，而是fish天然的完成度和易用性吸引了我，
转移到fish环境后，有关shell折腾算是告一段落，以下对该过程纪录。
&lt;/p&gt;
&lt;h3 id=&#34;fish-shell的安装以及默认shell的切换&#34;&gt;
fish shell的安装以及默认shell的切换
&lt;/h3&gt;
&lt;p&gt;
这个上面提到过，这裡具体针对不同的操作系统所需要执行的指令进行介绍。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
MacOS:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  brew install fish&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Ubuntu/Linux Mint:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  apt install fish&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
OpenSUSE:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  sudo zypper install fish&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
如果需要=root=权限，例如你是运行在Windows下的OpenSUSE环境，
则默认需要=root=权限，则前面加=sudo=。
通过下面的语句查看当前系统所使用的shell：
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  cat /etc/shells&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
如果显示你的fish shell在=/usr/bin/fish=，
那麽执行下面的语句切换其为默认shell（权限不足则补充=sudo=）：
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  chsh -s /usr/bin/fish&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
现在重新打开一个终端会话会发现默认shell已经切换到fish了。 如果打开fish
shell后马上报很多关于hostname的错，
也就是说当前环境缺少一个叫做hostname的包，
那麽使用你所使用的发行版的包管理器安装=hostname=，
例如在OpenSUSE下使用：
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  sudo zypper install hostname&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;fish的配置&#34;&gt;
fish的配置
&lt;/h3&gt;
&lt;p&gt;
我写好的配置上传在了Github，点击
&lt;a href=&#34;https://github.com/xinii/xinconfig/tree/master/profile/fish&#34;&gt;这里&lt;/a&gt;
查看我的配置。
&lt;/p&gt;
&lt;h3 id=&#34;在fish-shell下使用python时的常见问题&#34;&gt;
在fish shell下使用python时的常见问题
&lt;/h3&gt;
&lt;p&gt;
目前我遇到的比较需要注意的问题有下面两点：
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
关于tmux
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
tmux在后台存在session的时候， 即使更新=PYTHONPATH=环境变量也不会生效，
此时需要关闭tmux的所有进程，更新才会生效。
除fish以外其他shell环境应该也会遇到， 我是在fish首次出现，留作纪录。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
关于PYTHONPATH
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
fish
shell中定义环境变量的方式为 &lt;code class=&#34;verbatim&#34;&gt;set &amp;lt;variable_name&amp;gt; &amp;lt;parameter_1&amp;gt; &amp;lt;parameter_2&amp;gt;&lt;/code&gt;
这种方式有很大的优越性而且非常方便， 然而对于=PYTHONPATH=，
则=set PYTHONPATH &amp;lt;parameter_1&amp;gt;:&amp;lt;parameter_2&amp;gt;=的方式更具有通用性。
原因为，经过测试在MacOS下两种方式均可正常使用， 但在运行在Jetson
Nano上的Ubuntu下测试时，只有第二种方式可用。
具体原因尚未明确，有可能时操作系统不同的原因，
也可能是python版本不同造成的
（比如版本号相同，但处理器架构不同造成了编译方式的差异导致该问题）。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>USBデバイスからLinux Mintをインストール</title>
      <link>https://xinii.cf/post/install-linux-mint-from-the-usb-device/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/post/install-linux-mint-from-the-usb-device/</guid>
      <description>
&lt;p&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-1&#34;&gt;Linux Mint&lt;sup class=&#34;footnote-reference&#34;&gt;1&lt;/sup&gt;をインストールするためのUSBデバイスを用意する&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-2&#34;&gt;Linux MintのISOファイル&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;/p&gt;
&lt;p&gt;
*重要*：在开始下面的工作之前，首先确保U盘没有存任何东西，
或者里面没有放任何的重要数据（因为烧录会导致数据丢失），
同时电脑上已经准备好空的分区（安装到的目标分区的数据也会被抹掉）。
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Linux Mint&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;をインストールするためのUSBデバイスを用意する
&lt;/h2&gt;
&lt;p&gt;
首先准备一个usb设备，可以是u盘也可以是usb的移动硬盘，
之后会在这个上面写入供安装linux mint的安装程序。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
如果使用的是windows操作系统，那么点击
&lt;a href=&#34;https://tutorials.ubuntu.com/tutorial/tutorial-create-a-usb-stick-on-windows#0&#34;&gt;这里&lt;/a&gt;
来查看ubuntu官方的教程以创建一个可以安装Linux的USB设备。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
*注意*：上面的教程是教你如何製作一个用于安装Ubuntu的USB设备， 安装linux
mint的情况下仅需要把涉及到iso文件的地方换成Linux
Mint的iso文件，其他地方完全相同。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
其中会用到的软件叫做rufus，上面的教程裡面也有提到，点击
&lt;a href=&#34;https://rufus.akeo.ie/&#34;&gt;这里&lt;/a&gt; 打开rufus的官方网站，你也可以点击
&lt;a href=&#34;https://github.com/pbatard/rufus/releases/download/v3.5/rufus-3.5.exe&#34;&gt;这里&lt;/a&gt;
直接下载rufus。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Linux MintのISOファイル
&lt;/h2&gt;
&lt;p&gt;
前一节提到的linux mint的iso文件需要从下面的地方获取。点击
&lt;a href=&#34;https://linuxmint.com/&#34;&gt;这里&lt;/a&gt; 打开linux mint的官方网站。
或者也可以点击
&lt;a href=&#34;http://mirrors.evowise.com/linuxmint/stable/19.1/linuxmint-19.1-cinnamon-64bit.iso&#34;&gt;这里&lt;/a&gt;
直接下载Linux Mint 19.1版本。
&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-1&#34;&gt;&lt;a href=&#34;#footnote-reference-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;
&lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/5/5c/Linux_Mint_Official_Logo.svg&#34;&gt;Linux MintのLogo&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Jekyllで作成したブログをGithubに公開</title>
      <link>https://xinii.cf/post/create-a-blog-by-jekyll-and-publish-to-github/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://xinii.cf/post/create-a-blog-by-jekyll-and-publish-to-github/</guid>
      <description>
&lt;p&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#headline-1&#34;&gt;Jekyll&lt;sup class=&#34;footnote-reference&#34;&gt;1&lt;/sup&gt;をインストール&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#headline-2&#34;&gt;Githubに公開&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Jekyll&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;をインストール
&lt;/h2&gt;
&lt;p&gt;
JekyllがRubyで書いた静的なサイトジェネレーター。
以下は公式サイトの紹介文。
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Jekyll is a static site generator. You give it text written in your
  favorite markup language and it uses layouts to create a static
  website. You can tweak how you want the site URLs to look, what data
  gets displayed on the site, and more. –Jekyll&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-2&#34; href=&#34;#footnote-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Jekyllをインストールする際に，
まずはRubyのパッケージ管理ツールを入れておくとあとは便利。
よく使われているRubyのパッケージ管理ツールが &lt;code&gt;gem&lt;/code&gt; で，
Ubuntuなどのシステムにおいて，
以下のコマンドで &lt;code&gt;gem&lt;/code&gt; が同時にインストールされる。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  apt install ruby-dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 &lt;code&gt;gem&lt;/code&gt; をインストールして， &lt;code&gt;PATH&lt;/code&gt; の環境変数にちゃんと &lt;code&gt;gem&lt;/code&gt; が入っていれば，
 &lt;code&gt;gem&lt;/code&gt; を使っていろんなRubyのパッケージを入れることが可能になる。
もし &lt;code&gt;rbenv&lt;/code&gt; などのバーチャル環境管理ツールを使っていれば，
実行可能な &lt;code&gt;gem&lt;/code&gt; があればあとは同じ。
以下のコマンドでJekyllを入れる。簡単だね。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  gem install jekyll&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Githubに公開
&lt;/h2&gt;
&lt;p&gt;
Jekyllをインストールしたら，
とりあえずJekyllで作った何かしらをGithubに公開して見てみたいだね。
気持ちがわかる。
&lt;/p&gt;
&lt;p&gt;
そうしたら，記事などを色々書き始める前に，空のブログを一旦Githubに公開しよう！
まずローカルでブログを管理したい場所に以下のコマンドを叩く。
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  jekyll new folder-name-for-your-blog&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
そうすると，カレントフォルダーに &lt;code&gt;folder-name-for-your-blog&lt;/code&gt; という名前のサブフォルダーが出来てしまう。
&lt;/p&gt;
&lt;p&gt;
そして，Githubのリポジトリのページにおいて，
&lt;code&gt;your-user-name-of-github.github.io&lt;/code&gt; という名前のリポジトリを作っておく。
&lt;/p&gt;
&lt;p&gt;
新しいリポを作ったら， &lt;code&gt;git&lt;/code&gt; でどう &lt;code&gt;push&lt;/code&gt; するかとかのヒントが出てくると思うので，
それに従ってさっき作った &lt;code&gt;folder-name-for-your-blog&lt;/code&gt; フォルダーの内容を &lt;code&gt;your-user-name-of-github.github.io&lt;/code&gt; に &lt;code&gt;push&lt;/code&gt; すればおしまい。
&lt;/p&gt;
&lt;p&gt;
数分後に，ブラウザを使って &lt;code&gt;your-user-name-of-github.github.io&lt;/code&gt; にアクセスしてみれば，
何かしらのJekyllページが出てくるはず。
&lt;/p&gt;
&lt;p&gt;
&lt;del&gt;このブログでも以上の方法で作っている。&lt;/del&gt;
&lt;/p&gt;
&lt;p&gt;
（2020年6月14日追記）
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://xinii.github.io&#34;&gt;このブログ&lt;/a&gt;は現在 &lt;code&gt;hugo&lt;/code&gt; という静的なサイトジェネレーターで作っている。
&lt;/p&gt;
&lt;p&gt;
古いブログを参考していただく場合は，&lt;a href=&#34;https://xinii.github.io/jekyll-blog&#34;&gt;ここ&lt;/a&gt;をクリックしてください。
&lt;/p&gt;
&lt;p&gt;
それでは。
&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-1&#34;&gt;&lt;a href=&#34;#footnote-reference-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;
&lt;a href=&#34;https://raw.githubusercontent.com/jekyll/brand/master/jekyll-logo-black-red-transparent.png&#34;&gt;JekyllのLogo&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-2&#34;&gt;&lt;a href=&#34;#footnote-reference-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;
&lt;a href=&#34;https://jekyllrb.com/docs/&#34;&gt;jekyllrb.com&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
