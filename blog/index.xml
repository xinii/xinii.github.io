<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on xin iDEA iNNATA</title>
    <link>https://xinii.github.io/blog/</link>
    <description>Recent content in Blog on xin iDEA iNNATA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 04 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://xinii.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Some Windows registry settings that can help you work more efficiently</title>
      <link>https://xinii.github.io/blog/configuration/several-windows-registry-configurations/</link>
      <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/blog/configuration/several-windows-registry-configurations/</guid>
      <description>Table of Contents  Registry settings for Japanese keyboard layout  About keyboard scan code Example of keyboard scan code Perform keyboard scan code mapping in the registry   Change keyboard layout for IME  Change Chinese input method English layout to Japanese keyboard layout Change the keyboard layout of input methods in other languages   Registry settings when an unknown icon appears in &amp;ldquo;My Computer&amp;rdquo; or &amp;ldquo;PC&amp;rdquo; in Explorer Registry settings when unable to connect to the NAS on the local network  References  Registry settings for Japanese keyboard layout About keyboard scan code First, what is the keyboard scan code?</description>
    </item>
    
    <item>
      <title>Some works after Windows 10 clean installation</title>
      <link>https://xinii.github.io/blog/installation/some-installations-for-windows-10/</link>
      <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/blog/installation/some-installations-for-windows-10/</guid>
      <description>Activation of your Windows 10 slmgr -ipk {your product key} slmgr -skms {kms server address of your company} slmgr -ato Installation of some useful tools  Msys2 AutoHotKey Ricty  Configuration of msys2 pacman -S git fish tmux emacs gcc python cd ~ git clone https://github.com/xinii/xinconfig .xinconfig cd .xinconfig ./setenv fish exec fish set_conf tmux set_el auto set_el cn change_emacs xin emacs ssh-keygen -A emacs /etc/ssh/sshd_config #Port **** #PasswordAuthentication no cat {path to your pub key} &amp;gt; ~/.</description>
    </item>
    
    <item>
      <title>Add apt repository for Fish and Emacs</title>
      <link>https://xinii.github.io/blog/environment/add-apt-repository-for-fish-and-emacs/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/blog/environment/add-apt-repository-for-fish-and-emacs/</guid>
      <description>Table of Contents  Command to be use No this command? Do this first Process  Register repository Refresh repository Installation    Command to be use add-apt-repository No this command? Do this first apt install software-properties-common Process Register repository add-apt-repository ppa:kelleyk/emacs apt-add-repository ppa:fish-shell/release-3 Refresh repository apt update Installation apt install emacs26 apt install fish </description>
    </item>
    
    <item>
      <title>Several SSH configurations</title>
      <link>https://xinii.github.io/blog/environment/several-ssh-configurations/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/blog/environment/several-ssh-configurations/</guid>
      <description>SSH interruption phenomenon  When logging in to a remote server with ssh, Write failed: Broken pipe may be displayed and the connection may be broken. It is necessary to change the ssh setting on the client side or the server side, because ssh is automatically disconnected by a timeout if it is not operated for a while.  Remedy  Deal on the client side  Describe the following contents in /etc/ssh/ssh_config or ~/.</description>
    </item>
    
    <item>
      <title>在jetson nano上安装opencv</title>
      <link>https://xinii.github.io/blog/environment/install-opencv-on-jetson-nano/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/blog/environment/install-opencv-on-jetson-nano/</guid>
      <description>生成swap文件 为防止编译途中由于内存不足等问题报错， 这里首先提前创建一个swap文件，存放路径任意。 重启后swap空间会消失， 以下编译等全部工作完成后可以手动删除这个文件。
$ fallocate -l 4G swapfile $ chmod 600 swapfile $ mkswap swapfile $ sudo swapon swapfile $ swapon -s 生成安装脚本 安装opencv 4.0.0版本的脚本原始链接
以上是安装opencv 4.0.0的版本，在这里我们希望安装较新的4.1.0版本，将上面的代码稍作改动（版本号的部分）：
#!/bin/bash # # Copyright (c) 2018, NVIDIA CORPORATION. All rights reserved. # # NVIDIA Corporation and its licensors retain all intellectual property # and proprietary rights in and to this software, related documentation # and any modifications thereto. Any use, reproduction, disclosure or # distribution of this software and related documentation without an express # license agreement from NVIDIA Corporation is strictly prohibited.</description>
    </item>
    
    <item>
      <title>Install Gnutls and compile Emacs from source</title>
      <link>https://xinii.github.io/blog/environment/install-gnutls-and-compile-emacs-from-source/</link>
      <pubDate>Sat, 04 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/blog/environment/install-gnutls-and-compile-emacs-from-source/</guid>
      <description>The logo of Emacs1Table of Contents  The lack of Gnutls in the environment Potential problems Install Gnutls Other possible problems  The lack of Gnutls in the environment If the current environment lacks Gnutls, the following configuration is required before compiling and installing the Emacs source code.
./configure --with-gnutls=no Or specify the installation directory at the same time, add the option to ignore other dependent libraries that are still missing, such as the following configuration.</description>
    </item>
    
    <item>
      <title>我的shell迁移记录</title>
      <link>https://xinii.github.io/blog/environment/my-shell-migration-record/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/blog/environment/my-shell-migration-record/</guid>
      <description>Picture: High contrast utilities terminal1从bash到zsh 虽然我使用zsh shell两周后就换到fish shell了（关于fish shell下面有专门介绍）， 但这并不否认zsh shell仍然是个很好的shell。 你可以通过下面的方式从任意的shell切换至zsh shell。
 安装zsh时通过下面的指令：  brew install zsh (MacOS) apt install zsh (Ubuntu / Linux Mint)  如果你想要知道现在系统裡已经安装好的shell，输入下面的指令：  cat /etc/shells  如何将zsh作为你默认的shell呢？，输入下面的指令：  chsh -s /usr/local/bin/zsh  关于配置文件的读取错误  shell脚本解释出错时可以查看一下当前所使用的sh路径， 比如有可能是sh指向了dash导致出错。 通过下面的语句查看。
ls -l `which sh`  脚本解释器在语法上的不同点  从传统的bash等shell换到zsh时会发现集合的第一个元素的索引是从1开始的， 如果希望从0开始，在配置文件中配置下面语句即可。
 Fix array index for zsh:  if [ &amp;#34;$ZSH_NAME&amp;#34; = &amp;#34;zsh&amp;#34; ];then setopt localoptions ksharrays fi 配置zsh shell 与bash shell的.</description>
    </item>
    
    <item>
      <title>使用usb设备安装linux mint</title>
      <link>https://xinii.github.io/blog/installation/install-linux-mint-from-the-usb-device/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/blog/installation/install-linux-mint-from-the-usb-device/</guid>
      <description>The logo of Linux Mint1目录  准备一个用于安装 Linux Mint 的 USB 设备 Linux Mint 的 ISO 文件   重要：在开始下面的工作之前，首先确保U盘没有存任何东西， 或者里面没有放任何的重要数据（因为烧录会导致数据丢失）， 同时电脑上已经准备好空的分区（安装到的目标分区的数据也会被抹掉）。
准备一个用于安装linux mint的usb设备 首先准备一个usb设备，可以是u盘也可以是usb的移动硬盘， 之后会在这个上面写入供安装linux mint的安装程序。
 如果使用的是windows操作系统，那么点击 这里 来查看ubuntu官方的教程以创建一个可以安装Linux的USB设备。  注意：上面的教程是教你如何製作一个用于安装Ubuntu的USB设备， 安装linux mint的情况下仅需要把涉及到iso文件的地方换成Linux Mint的iso文件，其他地方完全相同。
 其中会用到的软件叫做rufus，上面的教程裡面也有提到，点击 这里 打开rufus的官方网站，你也可以点击 这里 直接下载rufus。  linux mint的iso文件 前一节提到的linux mint的iso文件需要从下面的地方获取。点击 这里 打开linux mint的官方网站。 或者也可以点击 这里 直接下载Linux Mint 19.1版本。
  The logo of Linux Mint &amp;#x21a9;&amp;#xfe0e;
   </description>
    </item>
    
    <item>
      <title>Create a blog via Jekyll and post to Github</title>
      <link>https://xinii.github.io/blog/cms/create-a-blog-by-jekyll-and-publish-to-github/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xinii.github.io/blog/cms/create-a-blog-by-jekyll-and-publish-to-github/</guid>
      <description>The logo of Jekyll1Table of Contents  Install Jekyll Publish blog to Github  Install Jekyll Jekyll is a static website generation framework written in Ruby language. The following is the official website introduction.
 Jekyll is a static site generator. You give it text written in your favorite markup language and it uses layouts to create a static website. You can tweak how you want the site URLs to look, what data gets displayed on the site, and more.</description>
    </item>
    
  </channel>
</rss>