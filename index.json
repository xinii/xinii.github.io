[{
    "title": "私について",
    "date": "2020-06-06",
    "description": "李欣，現在横浜市に住んでいます。xin blogに来ていただき誠にありがとうございます。以下は自己紹介です。",
    "body": "学歴 横浜国立大学   2016 年 10 月 - 2020 年 3 月\n2016年5月に中国政府留学基金委員会国費留学プログラム資格取得， 2016年10月に横浜国立大学大学院工学府博士課程後期入学し， 機械学習及び深層学習の応用に関する研究に従事，2020年3月に工学博士学位取得。\n  東京国際大学   2014 年 4 月 - 2015 年 3 月\n2014年4月に交換留学生として東京国際大学商学研究科博士課程前期に入学し経営情報を専攻。 2015年3月に単位取得。\n  山西大学（中国）   2009 年 9 月 - 2016 年 7 月\n2009年9月に山西大学に入学， 計算機情報技術学部でソフトウェアエンジニアリングを専攻し， 経済管理学部で工商管理を専攻。 2013年7月に工学・管理学学士学位取得。 2013年9月に山西大学大学院計算機情報技術研究科に入学， 2016年7月に工学修士学位取得。\n  研究及びソフトウェア開発 論文発表   李 欣, 新井 洋, and 濱上 知樹. 船型データの分布を考慮した深層学習による造波抵抗推定. 電気学会論文誌Ｃ（電子・情報・システム部門誌）, 140(3):391\u0026ndash;397, 2020. （DOI， CiNii， NDL Online）\n  Xin Li and Tomoki Hamagami. An improved auto-encoder based on 2-level prioritized experience replay for high dimension skewed data. Proceedings in Adaptation, Learning and Optimization, 12:93\u0026ndash;105, 2020. （本文言語が英語， DOI）\n  Xin Li and Tomoki Hamagami. Prioritized sampling method for autoencoder to reduce loss rate for skewed data. The papers of technical meeting on systems, IEE Japan, 2018(39):199\u0026ndash;203, 2018. （本文言語が英語， CiNii， NDL Online）\n  Jinwei Wang and Xin Li. Multi-translation parallel corpus construction of don quixote. In Spanish Paper Series 2017, pages 4250\u0026ndash;4423. Foreign Language Teaching and Researching Press, Beijing, 11 2018. （本文言語が中国語簡体字， Amazon kindle store）\n  Jinwei Wang and Xin Li. An empirical study of oral communication strategies for foreign language students - taking spanish as an example. In Proceedings of the 11th Cross-Strait Foreign Language Teaching Symposium, pages 1\u0026ndash;11. Fu Jen Catholic University Press, Taibei, 9 2016. （本文言語が中国語繁体字， Google books）\n  国際学会及び国内シンポジウム   Xin Li and Tomoki Hamagami. An improved auto-encoder based on 2-level prioritized experience replay for high dimension skewed data. In Proceedings of the 23rd Asia Pacific Symposium on Intelligent and Evolutionary Systems, 2019.\n  Xin Li and Tomoki Hamagami. Prioritized sampling method for autoencoder to reduce loss rate for skewed data. In The 28th Fuzzy, Artificial Intelligence, Neural Networks and Computational Intelligence, 2018.\n  Xin Li, Masaya Nakata, Hamatsu Fumiya, and Tomoki Hamagami. A research about anomaly detection method for multidimensional time series data. In The International Conference on Electrical Engineering, 2017.\n  ソフトウェア開発   2014 年 11 月：「顔認識及び音声認識に基づいた目の練習アプリ」中国国家特許局ソフトウェア著作権取得。 （記録番号：2014SR177728，ファイル番号：軟著登字第0846964号）\n  2014 年 9 月：「Bag-of-wordsに基づいた画像検索分類システム」中国国家特許局ソフトウェア著作権取得。 （記録番号：2014SR136257，ファイル番号：軟著登字第0805497号）\n  2014 年 5 月：「Androidに基づいた高解像度画像生成システム」中国国家特許局ソフトウェア著作権取得。 （記録番号：2014SR052862，ファイル番号：軟著登字第0722106号）\n  職歴及びインターンシップ 神奈川県横浜市   2020 年 4 月 - 現在\n横浜国立大学大学院工学研究院，非常勤教員（ポスドク研究員）。\n  2019 年 4 月 - 2020 年 3 月\n横浜国立大学理工学部，非常勤講師（電子情報システム基礎実験I，II）。\n  2017 年 4 月 - 2017 年 7 月\n横浜国立大学大学院工学府，TA（プログラミング演習I）。\n  埼玉県川越市   2014 年 6 月 - 2015 年 2 月\n株式会社セリア東武霞ヶ関店，アルバイト。\n  北京（中国）   2012 年 7 月 - 2012 年 9 月\n中軟国際有限公司，インターンシップ。\n  山西省太原市（中国）   2013 年 4 月 - 2014 年 3 月\n太原創成煥新科技有限公司，ソフトウェアプロジェクト及び業務管理。\n  2010 年 6 月 - 2010 年 8 月\n太原優連科技有限公司，インターンシップ。\n  ",
    "ref": "/about/"
  },{
    "title": "より効率的な作業を行うためのいくつかWindowsのレジストリー設定",
    "date": "2020-06-04",
    "description": "Windowsのシステム環境設定だけではなかなか叶えない機能だけど，重くなるのでサードパーティ製のソフトウェアも使いたくない？レジストリーを使いこなそう！",
    "body": "目次  日本語キーボードのレイアウトに関するレジストリー設定  スキャンコードについて スキャンコードの例 レジストリーでスキャンコードのマッピングを行うためには   キーボードレイアウトの種類を変更  中国語入力において英語配列から日本語配列に 他の言語の入力法において〇〇配列から〇〇配列に   「マイコンピュータ」や「PC」の画面に不明なアイコンが出た時のレジストリー設定 どうしてもローカルネットワークのNASとかに繋がらない時のレジストリー設定 参考資料  日本語キーボードのレイアウトに関するレジストリー設定 スキャンコードについて まずは，ウィキペディアに載せたスキャンコードの定義を見よう\n スキャンコード (scancode) とは、コンピュータのキーボードのキーが押されたり離されたりしたときに、 キーボードからCPUに送られるコード（符号）のこと。走査コード（そうさコード）ともいう。 \u0026ndash;Wikipedia1 スキャンコードの例2    キー コード     RCtrl 1D E0   LAlt 38 00   RAlt 38 E0   ESC 01 00   Insert 52 E0   Enter 1C 00   Caps 3A 00   Space 39 00   無変換 7B 00   変換 79 00    レジストリーでスキャンコードのマッピングを行うためには  まず，Win key + Rを押してregeditを入力したらEnterキーを押す。 そうすると，Windowsのレジストリーエディターが開かれたはず。 そこでレジストリーエディターで以下の場所を開く。  コンピューター\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Keyboard Layout  次に，右クリックしたら，「新規 - バイナリ値(B) - Scancode Map」の順で「Scancode Map」というバイナリキーを作る。  「Scancode Map」のバリュー（マッピングのルール）については， 以下のような僕の設定を参考していじってみればいいと思う。 ただし，「バージョン」，「フラグ」と「終端ヌル値」の部分は残る必要がある。 あと，「マッピング数」については，「終端ヌル値」も含めて設定したマッピングルールの数を数えて書けば良い。\n Logicool K380のための自分用レイアウト     Index Scancode 意味 Scancode 意味     0000 00 00 00 00 バージョン 00 00 00 00 フラグ   0008 08 00 00 00 マッピング数 1D 00 3A 00 LCtrl \u0026lt;- Caps   0010 3A 00 1D 00 Caps \u0026lt;- LCtrl 1D E0 38 00 RCtrl \u0026lt;- LAlt   0018 38 00 7B 00 LAlt \u0026lt;- 無変換 38 E0 70 00 RAlt \u0026lt;- かなキー   0020 39 00 79 00 Space \u0026lt;- 変換 01 00 38 E0 ESC \u0026lt;- RAlt   0028 00 00 00 00 終端ヌル値       FILCO Majestouch MINILA Airのための自分用レイアウト     Index Scancode 意味 Scancode 意味     0000 00 00 00 00 バージョン 00 00 00 00 フラグ   0008 08 00 00 00 マッピング数 1C 00 52 E0 Enter \u0026lt;- Insert   0010 1D E0 38 00 RCtrl \u0026lt;- LAlt 1D E0 70 00 RCtrl \u0026lt;- かなキー   0018 7B 00 46 00 無変換 \u0026lt;- Scroll 79 00 1D E1 変換 \u0026lt;- Pause   0020 38 00 7B 00 LAlt \u0026lt;- 無変換 01 00 79 00 ESC \u0026lt;- 変換   0028 00 00 00 00 終端ヌル値      キーボードレイアウトの種類を変更 中国語入力において英語配列から日本語配列に  まずは，レジストリーエディターで以下の場所を開く  コンピューター\\HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\Keyboard Layouts\\00000804  次に，以下のように変更をする     キーの名前 変更前 変更後     Layout File KBDUS.DLL KBD106.DLL    他の言語の入力法において〇〇配列から〇〇配列に 他の言語の入力法の場合は，レジストリーのパスの00000804のところを変更し， 変更後の***.DLLの部分に適切な内容で入れ替えたら良いと思う。\n「マイコンピュータ」や「PC」の画面に不明なアイコンが出た時のレジストリー設定 以下のレジストリーのパスに，その不明なものを探して見つけたら見つけたものを削除すれば良い\nコンピューター\\HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace どうしてもローカルネットワークのNASとかに繋がらない時のレジストリー設定3  まずは，以下の場所を開く  コンピューター\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\LanmanWorkstation\\Parameters  次に，下のような変更を行う     キーの名前 変更前 変更後     AllowInsecureGuestAuth 0 1    参考資料  上書きモードになる『Insert』キーを無効化する方法 Scancode Mapによるキー割り当ての変更 Keyboard Scancode Map Homegroup removed! How to get network sharing work with Windows 10 v1803.    スキャンコード - Wikipedia \u0026#x21a9;\u0026#xfe0e;\n スキャンコード一覧（スキャンコードセット1） \u0026#x21a9;\u0026#xfe0e;\n NASに接続できない！原因はSMB1.0ではなかった！ \u0026#x21a9;\u0026#xfe0e;\n   ",
    "ref": "/blog/configuration/several-windows-registry-configurations/"
  },{
    "title": "emacsのorg-modeにおいてpythonコードブロックを使った時の落とし穴",
    "date": "2019-11-23",
    "description": "emacsのorg-modeにおいてpythonコードブロックを使った時の落とし穴",
    "body": "僕は家計簿をorg-modeで記録しています， しかし，以下のエラーが出たことがある。\n File \u0026quot;\u0026lt;stdin\u0026gt;\u0026quot;, line 3 SyntaxError: Non-UTF-8 code starting with '\\xe3' in file \u0026lt;stdin\u0026gt; on line 3, but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details 例の# -*- coding: utf-8 -*-を先頭につけてもダメです。\n解決法は以下のようなコードブロックのヘッダーを，\n#+begin_src python :results file :var data=test 以下のように変換します。\n#+begin_src python :results file :var data=test[, 0:2] つまり，必要な数字や日付などのorg-modeのtableの列だけを pythonに転送すると，以上の問題が解決できますが， 根本的に# -*- coding: utf-8 -*-をコードブロックの中に 効く方法はまだわかりません。 わかる方は教えていただければありがたいと思います。\nコメントよろしくお願いします。\n",
    "ref": "/blog/pitfall/pitfall-while-using-python-code-block-on-emacs-org-mode/"
  },{
    "title": "LaTeXのplatexを使う際のfigureに関する落とし穴",
    "date": "2019-11-23",
    "description": "LaTeXのplatexを使う際のfigureに関する落とし穴",
    "body": "platexを使う際に， epsが問題がないが， なぜかそのepsを入れたらビルドが失敗。\nしかも失敗した時のログをみると， なかなか問題がわからない。\n例えば，全ての入れたfigureの定義が見つからないなどのレポート。 その時に，epsを正方形に近い形状を 矩形にしたら，問題が解決できた。 原因はまだ不明。 たまにこのようなことがあるので， 結構ハマったので，一応記録を\n",
    "ref": "/blog/pitfall/pitfall-while-inserting-figure-into-latex-article/"
  },{
    "title": "emacsとlilypondで楽譜生成",
    "date": "2019-11-16",
    "description": "emacsとlilypondで楽譜生成",
    "body": "コード例 \\version \u0026quot;2.18.2\u0026quot; \\score { \\new Staff \u0026lt;\u0026lt; \\new Voice \\relative c''' { \\set midiInstrument = #\u0026quot;flute\u0026quot; \\voiceOne \\key g \\major \\time 2/2 r2 g-\u0026quot;Flute\u0026quot; ~ g fis ~ fis4 g8 fis e2 ~ e4 d8 cis d2 } \\new Voice \\relative c'' { \\set midiInstrument = #\u0026quot;clarinet\u0026quot; \\voiceTwo b1-\u0026quot;Clarinet\u0026quot; a2. b8 a g2. fis8 e fis2 r } \u0026gt;\u0026gt; \\layout { } \\midi { \\context { \\Staff \\remove \u0026quot;Staff_performer\u0026quot; } \\context { \\Voice \\consists \u0026quot;Staff_performer\u0026quot; } \\context { \\Score tempoWholesPerMinute = #(ly:make-moment 72 2) } } } 出力例 {% include elements/figure.html image=\u0026quot;https://xinii.github.io/clean-blog/img/posts/jekyll.png\u0026rdquo; caption=\u0026quot;The logo of Jekyll\u0026rdquo; %}\n",
    "ref": "/blog/music/generate-sheet-music-with-lilypond-on-emacs/"
  },{
    "title": "絶対音感について",
    "date": "2019-11-15",
    "description": "絶対音感について",
    "body": "音階と音の周波数 次の表に，ピアノの鍵盤における88のキーに相応する音の周波数を示す。\n   鍵盤番号 周波数(Hz) 階名 音名     1 27.500 ラ A0（イ）   …      37 220.000 ラ A3（イ）   38 233.082  A#3   39 246.942 シ B3（ロ）   40 261.626 ド C4（ハ）   41 277.183  C#4   42 293.665 レ D4（ニ）   43 311.127  D#4   44 329.628 ミ E4（ホ）   45 349.228 ファ F4（ヘ）   46 369.994  F#4   47 391.995 ソ G4（ト）   48 415.305  G#4   49 440.000 ラ A4（イ）   50 466.164  A#4   51 493.883 シ B4（ロ）   52 523.251 ド C5（ハ）   …      88 4186.009 ド C8（ハ）    音の周波数を等比数列\\(a_0, a_1, a_2 \\dots a_{12}\\)とし， 公比を\\(r\\)とすると，以下の関係がある。\n\\[a_{12} = a_{0} \\times r^{12} = a_0 \\times 2\\]\nまた，1オクターブの二つの音の周波数が2倍の関係なので， 以下の式によって公比\\(r\\)がわかるようになる。\n\\[r^{12} = 2 \\Rightarrow r = \\sqrt[12]{2} \\approx 1.059463094\\]\n従って，任意の音に対して，\\(n\\)個半音上の音を計算する方法は以下の式に示す。\n\\[a_n = a_0 \\times r^n = a_0 \\times 2^{\\frac{n}{12}}\\]\n以上によると，絶対音感を持っている人が， 任意の一つの音を聞いて，その周波数がわかる。 具体的な数値がわからなくても， その数値は必ず一つの音名に相応するので，音名がわかる。 これに対して，相対音感が\\(a_0\\)が必要である。 また，音名が固定だが，階名が変化するものである。 \\(a_0\\)を任意の音を指定しておく前提なら， 耳の感覚で，他の音を計算するものである。\n絶対音感が，5歳くらいまでにトレーニングしないと， 身に着けにくくなるとよく言われている。 これはなぜだろうか。 母国語に似ているものなので， この視点から分析してみる。\n絶対音感を身に着けるにはなぜ5歳までトレーニングする必要があるか ここで，まずいくつかの言語の例をあげてみたい。\n 言語に関する時間 言語に関する意味 言語に関する発音  （未完成\u0026hellip; 時間がある時に続いて書く）\n",
    "ref": "/blog/music/about-absolute-pitch/"
  },{
    "title": "サポート",
    "date": "0001-01-01",
    "description": "",
    "body": "",
    "ref": "/contact/"
  }]
