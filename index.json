[{
    "title": "About",
    "date": "June 6, 2020",
    "description": "My name is Xin Li, living in Yokohama. I sincerely thank you for coming. The following is my brief introduction.",
    "body": "Educational experience Yokohama National University, Japan   October 2016 - March 2020\nIn May 2016, I awarded a scholarship under the State Scholarship Fund by the China Scholarship Council (CSC).\nFrom October 2016, I studied at the Graduate School of Engineering, Yokohama National University. Specialize in Physics, Electrical and Computer Engineering, research in areas such as machine learning, deep learning, and artificial intelligence applications.\nIn March 2020, I obtained a Doctor of Engineering degree.\n  Tokyo International University, Japan   April 2014 - March 2015\nFrom April 2014, I studied at the Graduate School of Business, Tokyo International University as an exchange student.\nIn March 2015, I completed the study plan.\n  Shanxi University, China   September 2009 - July 2016\nFrom September 2009, I studied at the School of Computer and Information Technology, Shanxi University, and the School of Economics and Management, Shanxi University, specialize in Software Engineering and Business Administration.\nIn July 2013, I obtained a Bachelor of Engineering degree and a Bachelor of Business Administration degree (a second degree).\nFrom September 2013, I studied at the (Graduate) School of Computer and Information Technology, Shanxi University, specialize in Software Engineering, and in July 2016, I obtained a Master of Engineering degree.\n  Research and software works Publications   Xin Li, Hiroshi Arai, and Tomoki Hamagami. Wave-making resistance estimation through deep learning considering the distribution of ship figure. IEEJ Transactions on Electronics, Information and Systems, 140(3):391\u0026ndash;397, 2020. (in Japanese, DOI, CiNii, NDL Online)\n  Xin Li and Tomoki Hamagami. An improved auto-encoder based on 2-level prioritized experience replay for high dimension skewed data. Proceedings in Adaptation, Learning and Optimization, 12:93\u0026ndash;105, 2020. (DOI)\n  Xin Li and Tomoki Hamagami. Prioritized sampling method for autoencoder to reduce loss rate for skewed data. The papers of technical meeting on systems, IEE Japan, 2018(39):199\u0026ndash;203, 2018. (CiNii, NDL Online)\n  Jinwei Wang and Xin Li. Multi-translation parallel corpus construction of don quixote. In Spanish Paper Series 2017, pages 4250\u0026ndash;4423. Foreign Language Teaching and Researching Press, Beijing, 11 2018. (in Simplified Chinese, Amazon kindle store)\n  Jinwei Wang and Xin Li. An empirical study of oral communication strategies for foreign language students - taking spanish as an example. In Proceedings of the 11th Cross-Strait Foreign Language Teaching Symposium, pages 1\u0026ndash;11. Fu Jen Catholic University Press, Taibei, 9 2016. (in Traditional Chinese, Google books)\n  Academic conference   Xin Li and Tomoki Hamagami. An improved auto-encoder based on 2-level prioritized experience replay for high dimension skewed data. In Proceedings of the 23rd Asia Pacific Symposium on Intelligent and Evolutionary Systems, 2019.\n  Xin Li and Tomoki Hamagami. Prioritized sampling method for autoencoder to reduce loss rate for skewed data. In The 28th Fuzzy, Artificial Intelligence, Neural Networks and Computational Intelligence, 2018.\n  Xin Li, Masaya Nakata, Hamatsu Fumiya, and Tomoki Hamagami. A research about anomaly detection method for multidimensional time series data. In The International Conference on Electrical Engineering, 2017.\n  Software works Computer software copyright registration certificate from China National Copyright Administration,\n  November 2014, Eye exercises software based on face recognition and speech recognition, Registration No.2014SR177728, Certificate No.0846964.\n  September 2014, Image retrieval and classification system based on the bag-of-words model, Registration No.2014SR136257, Certificate No.0805497.\n  May 2014, HD image generation system based on Android, Registration No.2014SR052862，Certificate No.0722106.\n  Work experience and internships Yokohama, Kanagawa, Japan   April 2020 - Now\nIn Faculty of Engineering, Yokohama National University, as a part-time teaching staff and postdoctoral researcher.\n  April 2019 - March 2020\nIn College of Engineering Science, Yokohama National University, as a part-time lecturer for Information System Basic Experiment Course I \u0026amp; II.\n  April 2017 - July 2017\nIn Graduate School of Engineering, Yokohama National University, as a teaching assistant for C-programming Experiment Course I.\n  Kawagoe, Saitama, Japan   June 2014 - February 2015\nIn Seria Corporation Tobu Kasumigaseki Store, as a part-time working staff.\n  Beijing, China   July 2012 - September 2012\nIn ChinaSoft International Co., Ltd., for internship.\n  Taiyuan, Shanxi, China   April 2013 - March 2014\nIn Taiyuan ChuangChengHuanXin Technology Co., Ltd., as a part-time software and business manager.\n  June 2010 - August 2010\nIn Taiyuan Union Technology Co., Ltd., for internship.\n  ",
    "ref": "/about/"
  },{
    "title": "Some Windows registry settings that can help you work more efficiently",
    "date": "June 4, 2020",
    "description": "Want to implement some functions that cannot be achieved only through the system settings of Windows, but do not want to use a third-party software? Let's try to modify the registry!",
    "body": "Table of Contents  Registry settings for Japanese keyboard layout  About keyboard scan code Example of keyboard scan code Perform keyboard scan code mapping in the registry   Change keyboard layout for IME  Change Chinese input method English layout to Japanese keyboard layout Change the keyboard layout of input methods in other languages   Registry settings when an unknown icon appears in \u0026ldquo;My Computer\u0026rdquo; or \u0026ldquo;PC\u0026rdquo; in Explorer Registry settings when unable to connect to the NAS on the local network  References  Registry settings for Japanese keyboard layout About keyboard scan code First, what is the keyboard scan code? Let us look at the definition on Wikipedia.\n A scancode (or scan code) is the data that most computer keyboards send to a computer to report which keys have been pressed. A number, or sequence of numbers, is assigned to each key on the keyboard. \u0026ndash;Wikipedia1 Example of keyboard scan code 2    Key Code     RCtrl 1D E0   LAlt 38 00   RAlt 38 E0   ESC 01 00   Insert 52 E0   Enter 1C 00   Caps 3A 00   Space 39 00   Muhenkan key 7B 00   Henkan key 79 00    Perform keyboard scan code mapping in the registry   First, press the Windows logo key + R, enter regedit and then press Enter to open the Windows Registry Editor. Then open the following location in the registry editor.\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Keyboard Layout   Next, right-click on the blank space and create a binary key called \u0026ldquo;Scancode Map\u0026rdquo; in the order of \u0026ldquo;New-Binary Value (B)-Scancode Map\u0026rdquo;. Double-click to edit.\nRegarding the value of \u0026ldquo;Scancode Map\u0026rdquo; (that is, the mapping rule), taking my settings as an example, the following table is listed for reference. Here, the parts of \u0026ldquo;version\u0026rdquo;, \u0026ldquo;flag\u0026rdquo; and \u0026ldquo;terminal null value\u0026rdquo; should be left as they are. In addition, regarding the \u0026ldquo;number of mappings\u0026rdquo;, it is necessary to set the sum of the number of mapping rules and the number of \u0026ldquo;terminal null values\u0026rdquo;.\n  The mapping of my Logicool K380 keyboard (Japanese layout)\n   Index Scancode Mapping Scancode Mapping     0000 00 00 00 00 Version 00 00 00 00 Flag   0008 08 00 00 00 Number of mappings 1D 00 3A 00 LCtrl \u0026lt;- Caps   0010 3A 00 1D 00 Caps \u0026lt;- LCtrl 1D E0 38 00 RCtrl \u0026lt;- LAlt   0018 38 00 7B 00 LAlt \u0026lt;- Muhenkan 38 E0 70 00 RAlt \u0026lt;- Kana   0020 39 00 79 00 Space \u0026lt;- Henkan 01 00 38 E0 ESC \u0026lt;- RAlt   0028 00 00 00 00 Terminal null value        The mapping of my FILCO Majestouch MINILA Air keyboard (Japanese layout)\n   Index Scancode Mapping Scancode Mapping     0000 00 00 00 00 Version 00 00 00 00 Flag   0008 0B 00 00 00 Number of mappings 1C 00 52 E0 Enter \u0026lt;- Insert   0010 1D E0 38 00 RCtrl \u0026lt;- LAlt 1D E0 70 00 RCtrl \u0026lt;- Kana   0018 7B 00 46 00 Muhenkan \u0026lt;- ScrollLock 79 00 1D E1 Henkan \u0026lt;- Pause   0020 00 00 45 00 Null \u0026lt;- NumLock 00 00 9D E1 Null \u0026lt;- Break   0028 38 00 7B 00 LAlt \u0026lt;- Muhenkan 01 00 79 00 ESC \u0026lt;- Henkan   0030 52 E0 29 00 Insert \u0026lt;- E/J 00 00 00 00 Terminal null value      It should be noted here that the \u0026ldquo;Pause/Break\u0026rdquo; key is not composed of a single scan code, The scan code of \u0026ldquo;NumLock\u0026rdquo; is also included, and it needs to be flexibly set according to the situation. You can refer to the following description.\n Pause\t0xE1:0x1D:0x45 [ 84key Ctrl(0x1D)+NumLock(0x45)], no auto repeat, break code 0xE1:0x9D:0xC5 \u0026ndash;Keyboard Scancode Map3   Change keyboard layout for IME Change Chinese input method English layout to Japanese keyboard layout   First, open the following location of the registry.\nHKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\Keyboard Layouts\\00000804   Then make the following adjustment.\n   Key Before change After change     Layout File KBDUS.DLL KBD106.DLL      Change the keyboard layout of input methods in other languages  In the case of other languages, you only need to change the entry method of the registry path 00000804 to the corresponding language input method, then change the part of ***.DLL to the name of the dynamic link library file in the corresponding language.  Registry settings when an unknown icon appears in \u0026ldquo;My Computer\u0026rdquo; or \u0026ldquo;PC\u0026rdquo; in Explorer   You can delete the item corresponding to the location icon by locating the following registry path.\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace   Registry settings when unable to connect to the NAS on the local network 4   First open the following registry location\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\LanmanWorkstation\\Parameters   Then make the following change\n   Key Before change After change     AllowInsecureGuestAuth 0 1      References  How to invalidate the Insert key (Originally in Japanese) Change the key assignment via Scancode Map (Originally in Japanese) Homegroup removed! How to get network sharing work with Windows 10 v1803.    Scancode \u0026#x21a9;\u0026#xfe0e;\n Keyboard scan code list (Originally in Japanese) \u0026#x21a9;\u0026#xfe0e;\n Keyboard Scancode Map \u0026#x21a9;\u0026#xfe0e;\n Unable to connect to NAS! The original reason is not SMB1.0! (Originally in Japanese) \u0026#x21a9;\u0026#xfe0e;\n   ",
    "ref": "/blog/configuration/several-windows-registry-configurations/"
  },{
    "title": "Some works after Windows 10 clean installation",
    "date": "June 4, 2020",
    "description": "The following are some of the things I have to do after installing windows. It will be very comfortable for me to use. I don’t know if it is suitable for you. Do you want to try it?",
    "body": "Activation of your Windows 10 slmgr -ipk {your product key} slmgr -skms {kms server address of your company} slmgr -ato Installation of some useful tools  Msys2 AutoHotKey Ricty  Configuration of msys2 pacman -S git fish tmux emacs gcc python cd ~ git clone https://github.com/xinii/xinconfig .xinconfig cd .xinconfig ./setenv fish exec fish set_conf tmux set_el auto set_el cn change_emacs xin emacs ssh-keygen -A emacs /etc/ssh/sshd_config #Port **** #PasswordAuthentication no cat {path to your pub key} \u0026gt; ~/.ssh/authorized_keys chmod 600 ~/.ssh/authorized_keys chmod 700 ~/.ssh /usr/bin/sshd ",
    "ref": "/blog/installation/some-installations-for-windows-10/"
  },{
    "title": "Add apt repository for Fish and Emacs",
    "date": "June 3, 2020",
    "description": "Do you want to install Emacs26 or Fish3.0 on the lower version of ubuntu based linux? Try this method",
    "body": "Table of Contents  Command to be use No this command? Do this first Process  Register repository Refresh repository Installation    Command to be use add-apt-repository No this command? Do this first apt install software-properties-common Process Register repository add-apt-repository ppa:kelleyk/emacs apt-add-repository ppa:fish-shell/release-3 Refresh repository apt update Installation apt install emacs26 apt install fish ",
    "ref": "/blog/environment/add-apt-repository-for-fish-and-emacs/"
  },{
    "title": "Several SSH configurations",
    "date": "June 3, 2020",
    "description": "Very headache for the ssh interruption phenomenon? Want to set an ssh daemon on android by termux? Take a look at this article.",
    "body": "Table of Contents  [SSH interruption phenomenon](#SSH interruption phenomenon)  Remedy One more thing   SSH daemon on android by termux  Installation Setting the key Start daemon in debug mode Start daemon Login on the PC side    SSH interruption phenomenon  When logging in to a remote server with ssh, Write failed: Broken pipe may be displayed and the connection may be broken. It is necessary to change the ssh setting on the client side or the server side, because ssh is automatically disconnected by a timeout if it is not operated for a while.  Remedy  Deal on the client side  Describe the following contents in /etc/ssh/ssh_config or ~/.ssh/config\nServerAliveInterval 15 ServerAliveCountMax 10 With this setting, 10 times response confirmation will send to the server every 15 seconds, and if there is still no response, it times out.\n Deal on the server side  Describe the following contents in /etc/ssh/sshd_config\nClientAliveInterval 30 ClientAliveCountMax 5 With this setting, 5 times response confirmation will send to the client every 30 seconds, and if there is still no response, it times out.\nOne more thing It is recommended to use tools such as tmux or screen, so that even if the connection is lost halfway, you can log in to the remote server again and attach the previous session.\nSSH daemon on android by termux Installation apt install openssh Setting the key ssh-keygen cat ~/.ssh/id_rsa.pub \u0026gt; ~/.ssh/authorized_keys chmod 600 ~/.ssh/authorized_keys chmod 700 ~/.ssh Start daemon in debug mode sshd -d Start daemon sshd Login on the PC side Set the private key ~/.ssh/id_rsa generated on the android side in the SSH client of the PC side, and connect to the server on android with specifying IP and port 8022 and without a username.\n",
    "ref": "/blog/environment/several-ssh-configurations/"
  },{
    "title": "How to install OpenCV on Jetson Nano?",
    "date": "July 12, 2019",
    "description": "You may need to do some work when installing OpenCV on Jetson Nano, let's look at it together",
    "body": "Table of Contents  Generate swap file Generate installation script Run the script Test the installed OpenCV  Generate swap file To prevent errors due to insufficient memory during compilation, create a swap file firstly, and store it to somewhere you know. After OS restarting, the swap space will disappear, or you can manually delete this file after the completion of the following compilation and other work.\n$ fallocate -l 4G swapfile $ chmod 600 swapfile $ mkswap swapfile $ sudo swapon swapfile $ swapon -s Generate installation script The original link of the script to install the OpenCV 4.0.0 version\nThe above is the version used to install OpenCV 4.0.0, here we want to install the newer version 4.1.0, so change the version number part of the above code.\n#!/bin/bash # # Copyright (c) 2018, NVIDIA CORPORATION. All rights reserved. # # NVIDIA Corporation and its licensors retain all intellectual property # and proprietary rights in and to this software, related documentation # and any modifications thereto. Any use, reproduction, disclosure or # distribution of this software and related documentation without an express # license agreement from NVIDIA Corporation is strictly prohibited. # if [ \u0026quot;$#\u0026quot; -ne 1 ]; then echo \u0026quot;Usage: $0 \u0026lt;Install Folder\u0026gt;\u0026quot; exit fi folder=\u0026quot;$1\u0026quot; user=\u0026quot;nvidia\u0026quot; passwd=\u0026quot;nvidia\u0026quot; echo \u0026quot;** Install requirement\u0026quot; sudo apt-get update sudo apt-get install -y build-essential cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev sudo apt-get install -y python2.7-dev python3.6-dev python-dev python-numpy python3-numpy sudo apt-get install -y libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev sudo apt-get install -y libv4l-dev v4l-utils qv4l2 v4l2ucp sudo apt-get install -y curl sudo apt-get update echo \u0026quot;** Download opencv-4.1.0\u0026quot; cd $folder curl -L https://github.com/opencv/opencv/archive/4.1.0.zip -o opencv-4.1.0.zip curl -L https://github.com/opencv/opencv_contrib/archive/4.1.0.zip -o opencv_contrib-4.1.0.zip unzip opencv-4.1.0.zip unzip opencv_contrib-4.1.0.zip cd opencv-4.1.0/ echo \u0026quot;** Building...\u0026quot; mkdir release cd release/ cmake -D WITH_CUDA=ON -D CUDA_ARCH_BIN=\u0026quot;5.3\u0026quot; -D CUDA_ARCH_PTX=\u0026quot;\u0026quot; -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-4.1.0/modules -D WITH_GSTREAMER=ON -D WITH_LIBV4L=ON -D BUILD_opencv_python2=ON -D BUILD_opencv_python3=ON -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_EXAMPLES=OFF -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local .. make -j3 sudo make install sudo apt-get install -y python-opencv python3-opencv echo \u0026quot;** Install opencv-4.1.0 successfully\u0026quot; echo \u0026quot;** Bye :)\u0026quot; Save the above script as a sh file, for example, install_opencv4.1.0_Nano.sh.\nRun the script mkdir opencv sh install_opencv4.1.0_Nano.sh opencv The installation may take a lot of time, please be patient and wait for the installation to end. It is recommended to use tmux to hang in the background.\nTest the installed OpenCV Test the statement import cv2 through the interactive interface of python, it is good if no error is reported.\nHowever, considering that users who use tools such as pyenv for python version management, if they switch to the python version installed under pyenv, the installed OpenCV may not be recognized. The solution is to create a soft link to the OpenCV library and link it to the python library directory under the management of pyenv.\nFor example, suppose the library directory of the python version in pyenv is, /home/{username}/.anyenv/envs/pyenv/versions/3.6.8/lib/python3.6/site-packages, and the installed OpenCV library path is, /usr/local/lib/python3.6/dist-packages/cv2/python-3.6/cv2.cpython-36m-aarch64-linux-gnu.so, then execute the following statement to create a soft link.\ncd /home/{username}/.anyenv/envs/pyenv/versions/3.6.8/lib/python3.6/site-packages ln -s /usr/local/lib/python3.6/dist-packages/cv2/python-3.6/cv2.cpython-36m-aarch64-linux-gnu.so ./ Besides, use the python version of pip in pyenv to install numpy through the pip install numpy statement, and go to the interactive interface to test import cv2. If no error is displayed, the installation is complete.\n",
    "ref": "/blog/environment/install-opencv-on-jetson-nano/"
  },{
    "title": "Install Gnutls and compile Emacs from source",
    "date": "May 4, 2019",
    "description": "Gnutls errors when compiling Emacs from source? Let me take a closer look at what is going on!",
    "body": "The logo of Emacs1Table of Contents  The lack of Gnutls in the environment Potential problems Install Gnutls Other possible problems  The lack of Gnutls in the environment If the current environment lacks Gnutls, the following configuration is required before compiling and installing the Emacs source code.\n./configure --with-gnutls=no Or specify the installation directory at the same time, add the option to ignore other dependent libraries that are still missing, such as the following configuration.\nbash configure --prefix=$HOME/.local --with-gif=no --with-gnutls=no In this way, the configuration and installation can be carried out smoothly in the absence of permission to the default installation path, or the lack of various dependent libraries.\nPotential problems Although the above can achieve the purpose of normal installation of Emacs to the $HOME/.local directory, However, due to the lack of the Gnutls component, when using network transmission in Emacs, you can only use http instead of https.\nIf only needs a network connection during Emacs initialization, you can solve the problem by changing the Melpa links to start with http, but this will cause problems for future extensions that require network connectivity in Emacs.\nFor example, when using google-translate, even if the https in all *.el files in the google-translate package are changed to http, during actual use, some https services will still be used automatically, resulting in abnormal translation.\nOne thing to note here is that after modifying the *.el file, you need to delete all *.elc files to force a recompilation to make the changes take effect.\nInstall Gnutls After the above actual tests, it is not difficult to find that it is a good choice to install Emacs from the source code after installing Gnutls in the current environment.\nTaking OpenSUSE as an example, Gnutls can be installed by running the following statement on the terminal.\nsudo zypper install gnutls Other possible problems checking for library containing tputs... no configure: error: The required function \u0026#39;tputs\u0026#39; was not found in any library. The following libraries were tried (in order): libtinfo, libncurses, libterminfo, libcurses, libtermcap Please try installing whichever of these libraries is most appropriate for your system, together with its header files. For example, a libncurses-dev(el) or similar package. make: *** No targets specified and no makefile found. Stop. make: *** No rule to make target \u0026#39;install\u0026#39;. Stop. Besides, if Gnutls is installed in the current environment, and the above error is still reported after make, then for OpenSUSE environment, you need a package called ncurses-devel, execute the following sentence to install.\nsudo zypper install ncurses-devel   The logo of Emacs \u0026#x21a9;\u0026#xfe0e;\n   ",
    "ref": "/blog/environment/install-gnutls-and-compile-emacs-from-source/"
  },{
    "title": "我的shell迁移记录",
    "date": "May 3, 2019",
    "description": "从bash到zsh再到fish",
    "body": "Picture: High contrast utilities terminal1从bash到zsh 虽然我使用zsh shell两周后就换到fish shell了（关于fish shell下面有专门介绍）， 但这并不否认zsh shell仍然是个很好的shell。 你可以通过下面的方式从任意的shell切换至zsh shell。\n 安装zsh时通过下面的指令：  brew install zsh (MacOS) apt install zsh (Ubuntu / Linux Mint)  如果你想要知道现在系统裡已经安装好的shell，输入下面的指令：  cat /etc/shells  如何将zsh作为你默认的shell呢？，输入下面的指令：  chsh -s /usr/local/bin/zsh  关于配置文件的读取错误  shell脚本解释出错时可以查看一下当前所使用的sh路径， 比如有可能是sh指向了dash导致出错。 通过下面的语句查看。\nls -l `which sh`  脚本解释器在语法上的不同点  从传统的bash等shell换到zsh时会发现集合的第一个元素的索引是从1开始的， 如果希望从0开始，在配置文件中配置下面语句即可。\n Fix array index for zsh:  if [ \u0026#34;$ZSH_NAME\u0026#34; = \u0026#34;zsh\u0026#34; ];then setopt localoptions ksharrays fi 配置zsh shell 与bash shell的.bashrc类似，zsh的配置也需要一个配置文件， 这个文件是在用户目录下的.zshrc文件，点击 这里 打开我上传到Github的配置文件下载使用。\n从zsh到fish 使用zsh shell之后大概两週我就换到fish shell了， 这不是因为zsh不好，而是fish天然的完成度和易用性吸引了我， 转移到fish环境后，有关shell折腾算是告一段落，以下对该过程纪录。\nfish shell的安装以及默认shell的切换 这个上面提到过，这裡具体针对不同的操作系统所需要执行的指令进行介绍。\n MacOS:  brew install fish  Ubuntu/Linux Mint:  apt install fish  OpenSUSE:  sudo zypper install fish 如果需要root权限，例如你是运行在Windows下的OpenSUSE环境， 则默认需要root权限，则前面加sudo。 通过下面的语句查看当前系统所使用的shell：\ncat /etc/shells 如果显示你的fish shell在/usr/bin/fish， 那麽执行下面的语句切换其为默认shell（权限不足则补充sudo）：\nchsh -s /usr/bin/fish 现在重新打开一个终端会话会发现默认shell已经切换到fish了。 如果打开fish shell后马上报很多关于hostname的错， 也就是说当前环境缺少一个叫做hostname的包， 那麽使用你所使用的发行版的包管理器安装hostname， 例如在OpenSUSE下使用：\nsudo zypper install hostname fish的配置 我写好的配置上传在了Github，点击 这里 查看我的配置。\n在fish shell下使用python时的常见问题 目前我遇到的比较需要注意的问题有下面两点：\n 关于tmux  tmux在后台存在session的时候， 即使更新PYTHONPATH环境变量也不会生效， 此时需要关闭tmux的所有进程，更新才会生效。 除fish以外其他shell环境应该也会遇到， 我是在fish首次出现，留作纪录。\n 关于PYTHONPATH  fish shell中定义环境变量的方式为set \u0026lt;variable_name\u0026gt; \u0026lt;parameter_1\u0026gt; \u0026lt;parameter_2\u0026gt; 这种方式有很大的优越性而且非常方便， 然而对于PYTHONPATH， 则set PYTHONPATH \u0026lt;parameter_1\u0026gt;:\u0026lt;parameter_2\u0026gt;的方式更具有通用性。 原因为，经过测试在MacOS下两种方式均可正常使用， 但在运行在Jetson Nano上的Ubuntu下测试时，只有第二种方式可用。 具体原因尚未明确，有可能时操作系统不同的原因， 也可能是python版本不同造成的 （比如版本号相同，但处理器架构不同造成了编译方式的差异导致该问题）。\n  High contrast utilities terminal \u0026#x21a9;\u0026#xfe0e;\n   ",
    "ref": "/blog/environment/my-shell-migration-record/"
  },{
    "title": "使用usb设备安装linux mint",
    "date": "April 23, 2019",
    "description": "使用usb设备安装linux mint",
    "body": "The logo of Linux Mint1目录  准备一个用于安装 Linux Mint 的 USB 设备 Linux Mint 的 ISO 文件   重要：在开始下面的工作之前，首先确保U盘没有存任何东西， 或者里面没有放任何的重要数据（因为烧录会导致数据丢失）， 同时电脑上已经准备好空的分区（安装到的目标分区的数据也会被抹掉）。\n准备一个用于安装linux mint的usb设备 首先准备一个usb设备，可以是u盘也可以是usb的移动硬盘， 之后会在这个上面写入供安装linux mint的安装程序。\n 如果使用的是windows操作系统，那么点击 这里 来查看ubuntu官方的教程以创建一个可以安装Linux的USB设备。  注意：上面的教程是教你如何製作一个用于安装Ubuntu的USB设备， 安装linux mint的情况下仅需要把涉及到iso文件的地方换成Linux Mint的iso文件，其他地方完全相同。\n 其中会用到的软件叫做rufus，上面的教程裡面也有提到，点击 这里 打开rufus的官方网站，你也可以点击 这里 直接下载rufus。  linux mint的iso文件 前一节提到的linux mint的iso文件需要从下面的地方获取。点击 这里 打开linux mint的官方网站。 或者也可以点击 这里 直接下载Linux Mint 19.1版本。\n  The logo of Linux Mint \u0026#x21a9;\u0026#xfe0e;\n   ",
    "ref": "/blog/installation/install-linux-mint-from-the-usb-device/"
  },{
    "title": "Create a blog via Jekyll and post to Github",
    "date": "April 2, 2019",
    "description": "Want to own a blog but don’t know how to create it? Try Jekyll natively supported by Github!",
    "body": "The logo of Jekyll1Table of Contents  Install Jekyll Publish blog to Github  Install Jekyll Jekyll is a static website generation framework written in Ruby language. The following is the official website introduction.\n Jekyll is a static site generator. You give it text written in your favorite markup language and it uses layouts to create a static website. You can tweak how you want the site URLs to look, what data gets displayed on the site, and more. \u0026ndash;Jekyll2 When installing Jekyll, you first need a Ruby package management environment. The commonly used package manager of the Ruby programming environment is gem. For example, executing the following statement in Ubuntu will also install gem.\napt install ruby-dev After installing gem, make sure its execution path is in our PATH environment variable. If you do not use the above method, but use virtual environment management tools such as rbenv, just call the gem configured in the virtual environment. Then you can install Jekyll by executing the following statement.\ngem install jekyll Publish blog to Github After installing Jekyll, you must hope to post something to Github first to see the effect. Especially understand this mood.\nThen next, before blogging, let\u0026rsquo;s firstly use Jekyll installed to generate a default site and publish it to Github. Execute the following command in the current path where you want to manage the blog locally.\njekyll new folder-name-for-your-blog Then a folder called folder-name-for-your-blog will be generated under the current path, which is the new blog source code created by Jekyll.\nThen create a repository called your-user-name-of-github.github.io on Github. After creating the repository, Github will prompt how to use git to push local content to the repository. Follow the wizard to push the contents of the folder-name-for-your-blog folder you just created to this repository.\nThen wait a few minutes to open your-user-name-of-github.github.io through your browser, and you can see Jekyll\u0026rsquo;s welcome page if nothing unexpected happens.\n~~This site is also created by the above method. ~~\n(Postscript on June 14, 2020)\n[This site] (https://xinii.github.io) has now been created using the hugo static website generation framework, To refer to the original site, please [click here] (https://xinii.github.io/jekyll-blog) to visit.\nWelcome to contact and leave a message.\n  The logo of Jekyll \u0026#x21a9;\u0026#xfe0e;\n jekyllrb.com \u0026#x21a9;\u0026#xfe0e;\n   ",
    "ref": "/blog/cms/create-a-blog-by-jekyll-and-publish-to-github/"
  },{
    "title": "Contact",
    "date": "January 1, 0001",
    "description": "",
    "body": "",
    "ref": "/contact/"
  }]
