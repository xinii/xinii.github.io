[{
    "title": "Some works after Windows 10 clean installation",
    "date": "June 4, 2020",
    "description": "The following are some of the things I have to do after installing windows. It will be very comfortable for me to use. I don’t know if it is suitable for you. Do you want to try it?",
    "body": "Activation of your Windows 10 slmgr -ipk {your product key} slmgr -skms {kms server address of your company} slmgr -ato Installation of some useful tools  Msys2 AutoHotKey Ricty  Configuration of msys2 pacman -S git fish tmux emacs gcc python cd ~ git clone https://github.com/xinii/xinconfig .xinconfig cd .xinconfig ./setenv fish exec fish set_conf tmux set_el auto set_el cn change_emacs xin emacs ssh-keygen -A emacs /etc/ssh/sshd_config #Port **** #PasswordAuthentication no cat {path to your pub key} \u0026gt; ~/.ssh/authorized_keys chmod 600 ~/.ssh/authorized_keys chmod 700 ~/.ssh /usr/bin/sshd ",
    "ref": "/posts/some-configurations-for-windows-10/"
  },{
    "title": "Add apt repository for fish and emacs",
    "date": "June 3, 2020",
    "description": "Do you want to install emacs26 or fish3.0 on the lower version of ubuntu based linux? Try this method",
    "body": "Command to be use add-apt-repository No this command? Do this first apt install software-properties-common Process Register repository add-apt-repository ppa:kelleyk/emacs apt-add-repository ppa:fish-shell/release-3 Refresh repository apt update Installation apt install emacs26 apt install fish ",
    "ref": "/posts/add-apt-repository-for-fish-and-emacs/"
  },{
    "title": "SSH configuration",
    "date": "June 3, 2020",
    "description": "Very headache for the ssh interruption phenomenon? Want to set an ssh daemon on android by termux? Take a look at this article.",
    "body": "SSH interruption phenomenon  When logging in to a remote server with ssh, Write failed: Broken pipe may be displayed and the connection may be broken. It is necessary to change the ssh setting on the client side or the server side, because ssh is automatically disconnected by a timeout if it is not operated for a while.  Remedy  Deal on the client side  Describe the following contents in /etc/ssh/ssh_config or ~/.ssh/config\nServerAliveInterval 15 ServerAliveCountMax 10 With this setting, 10 times response confirmation will send to the server every 15 seconds, and if there is still no response, it times out.\n Deal on the server side  Describe the following contents in /etc/ssh/sshd_config\nClientAliveInterval 30 ClientAliveCountMax 5 With this setting, 5 times response confirmation will send to the client every 30 seconds, and if there is still no response, it times out.\nOne more thing It is recommended to use tools such as tmux or screen, so that even if the connection is lost halfway, you can log in to the remote server again and attach the previous session.\nSSH daemon on android by termux Installation apt install openssh Setting the key ssh-keygen cat ~/.ssh/id_rsa.pub \u0026gt; ~/.ssh/authorized_keys chmod 600 ~/.ssh/authorized_keys chmod 700 ~/.ssh Start daemon in debug mode sshd -d Start daemon sshd Login on the PC side Set the private key ~/.ssh/id_rsa generated on the android side in the SSH client of the PC side, and connect to the server on android with specifying IP and port 8022 and without a username.\n",
    "ref": "/posts/ssh-configuration/"
  },{
    "title": "Generate sheet music with Lilypond on Emacs",
    "date": "January 1, 0001",
    "description": "Emacsにおけるlilypondを使った楽譜生成",
    "body": "コード例 \\version \u0026quot;2.18.2\u0026quot; \\score { \\new Staff \u0026lt;\u0026lt; \\new Voice \\relative c''' { \\set midiInstrument = #\u0026quot;flute\u0026quot; \\voiceOne \\key g \\major \\time 2/2 r2 g-\u0026quot;Flute\u0026quot; ~ g fis ~ fis4 g8 fis e2 ~ e4 d8 cis d2 } \\new Voice \\relative c'' { \\set midiInstrument = #\u0026quot;clarinet\u0026quot; \\voiceTwo b1-\u0026quot;Clarinet\u0026quot; a2. b8 a g2. fis8 e fis2 r } \u0026gt;\u0026gt; \\layout { } \\midi { \\context { \\Staff \\remove \u0026quot;Staff_performer\u0026quot; } \\context { \\Voice \\consists \u0026quot;Staff_performer\u0026quot; } \\context { \\Score tempoWholesPerMinute = #(ly:make-moment 72 2) } } } 出力例 {% include elements/figure.html image=\u0026quot;https://xinii.github.io/clean-blog/img/posts/jekyll.png\u0026rdquo; caption=\u0026quot;The logo of Jekyll\u0026rdquo; %}\n",
    "ref": "/posts/lilypond/"
  },{
    "title": "How to Install OpenCV on NVIDIA Jetson Nano",
    "date": "January 1, 0001",
    "description": "在Jetson Nano上安装OpenCV",
    "body": "生成swap文件 为防止编译途中由于内存不足等问题报错， 这里首先提前创建一个swap文件，存放路径任意。 重启后swap空间会消失， 以下编译等全部工作完成后可以手动删除这个文件。\n$ fallocate -l 4G swapfile $ chmod 600 swapfile $ mkswap swapfile $ sudo swapon swapfile $ swapon -s 生成安装脚本 安装OpenCV 4.0.0版本的脚本原始链接\n以上是安装OpenCV 4.0.0的版本，在这里我们希望安装较新的4.1.0版本，将上面的代码稍作改动（版本号的部分）：\n#!/bin/bash # # Copyright (c) 2018, NVIDIA CORPORATION. All rights reserved. # # NVIDIA Corporation and its licensors retain all intellectual property # and proprietary rights in and to this software, related documentation # and any modifications thereto. Any use, reproduction, disclosure or # distribution of this software and related documentation without an express # license agreement from NVIDIA Corporation is strictly prohibited. # if [ \u0026#34;$#\u0026#34; -ne 1 ]; then echo \u0026#34;Usage: $0\u0026lt;Install Folder\u0026gt;\u0026#34; exit fi folder=\u0026#34;$1\u0026#34; user=\u0026#34;nvidia\u0026#34; passwd=\u0026#34;nvidia\u0026#34; echo \u0026#34;** Install requirement\u0026#34; sudo apt-get update sudo apt-get install -y build-essential cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev sudo apt-get install -y python2.7-dev python3.6-dev python-dev python-numpy python3-numpy sudo apt-get install -y libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev sudo apt-get install -y libv4l-dev v4l-utils qv4l2 v4l2ucp sudo apt-get install -y curl sudo apt-get update echo \u0026#34;** Download opencv-4.1.0\u0026#34; cd $folder curl -L https://github.com/opencv/opencv/archive/4.1.0.zip -o opencv-4.1.0.zip curl -L https://github.com/opencv/opencv_contrib/archive/4.1.0.zip -o opencv_contrib-4.1.0.zip unzip opencv-4.1.0.zip unzip opencv_contrib-4.1.0.zip cd opencv-4.1.0/ echo \u0026#34;** Building...\u0026#34; mkdir release cd release/ cmake -D WITH_CUDA=ON -D CUDA_ARCH_BIN=\u0026#34;5.3\u0026#34; -D CUDA_ARCH_PTX=\u0026#34;\u0026#34; -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-4.1.0/modules -D WITH_GSTREAMER=ON -D WITH_LIBV4L=ON -D BUILD_opencv_python2=ON -D BUILD_opencv_python3=ON -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_EXAMPLES=OFF -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local .. make -j3 sudo make install sudo apt-get install -y python-opencv python3-opencv echo \u0026#34;** Install opencv-4.1.0 successfully\u0026#34; echo \u0026#34;** Bye :)\u0026#34; 将上面的脚本保存为sh文件，例如install_opencv4.1.0_Nano.sh。\n运行脚本 mkdir opencv sh install_opencv4.1.0_Nano.sh opencv 安装会比较花时间，耐心等待安装结束，建议使用tmux等挂在后台执行。\n测试安装好的OpenCV 通过python的交互界面测试语句import cv2，不报错则安装完成。\n不过，考虑到使用pyenv等工具进行python版本管理的用户， 此时如果切换到pyenv下安装的python版本可能无法检测到已安装的OpenCV， 作为解决版本是创建一个OpenCV库的软链接到pyenv中python版本的库目录下。\n假设你的pyenv中的python版本的库目录为 /home/xin/.anyenv/envs/pyenv/versions/3.6.8/lib/python3.6/site-packages， 安装好的OpenCV库路径为 /usr/local/lib/python3.6/dist-packages/cv2/python-3.6/cv2.cpython-36m-aarch64-linux-gnu.so， 那么执行下面的语句即可创建软链接。\ncd /home/xin/.anyenv/envs/pyenv/versions/3.6.8/lib/python3.6/site-packages ln -s /usr/local/lib/python3.6/dist-packages/cv2/python-3.6/cv2.cpython-36m-aarch64-linux-gnu.so ./ 另外提前使用pyenv中的python版本的pip通过 pip install numpy语句安装好numpy， 去交互界面测试import cv2无错误显示则安装完成。\n",
    "ref": "/posts/jetson-nano-opencv/"
  }]
