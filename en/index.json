[{"authors":["xin"],"categories":null,"content":" Research in areas such as machine learning, deep learning, and artificial intelligence applications, specialize in priority sampling and learning algorithm for non-uniform data and offset data. ","date":1583020800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1583020800,"objectID":"addc4885726ec1c1a1451bb0c5466034","permalink":"https://xinii.cf/en/author/xin-li/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/en/author/xin-li/","section":"authors","summary":" Research in areas such as machine learning, deep learning, and artificial intelligence applications, specialize in priority sampling and learning algorithm for non-uniform data and offset data. ","tags":null,"title":"Xin Li","type":"authors"},{"authors":null,"categories":["Configuration tool"],"content":"","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"9d218bb02591dc362b63b96839feb951","permalink":"https://xinii.cf/en/project/xinconfig/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/en/project/xinconfig/","section":"project","summary":"Emacs, bash, fish shell, tmux, anyenv, ..., configure anything with xinconfig","tags":["Emacs","Bash","Fish shell","Script"],"title":"A reasonable configuration tool for your unified working environment","type":"project"},{"authors":null,"categories":["Windows"],"content":"  Table of Contents  Registry settings for Japanese keyboard layout  About keyboard scan code  Example of keyboard scan code1  Perform keyboard scan code mapping in the registry    Change keyboard layout for IME  Change Chinese input method English layout to Japanese keyboard layout  Change the keyboard layout of input methods in other languages    Registry settings when an unknown icon appears in \u0026#34;My Computer\u0026#34; or \u0026#34;PC\u0026#34; in Explorer  Registry settings when unable to connect to the NAS on the local network2  References    Registry settings for Japanese keyboard layout  About keyboard scan code   First, what is the keyboard scan code? Let us look at the definition on Wikipedia.   A scancode (or scan code) is the data that most computer keyboards send to a computer to report which keys have been pressed. A number, or sequence of numbers, is assigned to each key on the keyboard. - Wikipedia  Example of keyboard scan code1     Key Code     RCtrl 1D E0   LAlt 38 00   RAlt 38 E0   ESC 01 00   Insert 52 E0   Enter 1C 00   Caps 3A 00   Space 39 00   Muhenkan key 7B 00   Henkan key 79 00    Perform keyboard scan code mapping in the registry     First, press the Windows logo key + R, enter regedit and then press Enter to open the Windows Registry Editor. Then open the following location in the registry editor. HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Keyboard Layout     Next, right-click on the blank space and create a binary key called \u0026#34;Scancode Map\u0026#34; in the order of \u0026#34;New-Binary Value (B)-Scancode Map\u0026#34;. Double-click to edit.  Regarding the value of \u0026#34;Scancode Map\u0026#34; (that is, the mapping rule), taking my settings as an example, the following table is listed for reference. Here, the parts of \u0026#34;version\u0026#34;, \u0026#34;flag\u0026#34; and \u0026#34;terminal null value\u0026#34; should be left as they are. In addition, regarding the \u0026#34;number of mappings\u0026#34;, it is necessary to set the sum of the number of mapping rules and the number of \u0026#34;terminal null values\u0026#34;.    The mapping of my Logicool K380 keyboard (Japanese layout)    Index Scancode Mapping Scancode Mapping     0000 00 00 00 00 Version 00 00 00 00 Flag   0008 08 00 00 00 Number of mappings 1D 00 3A 00 LCtrl \u0026lt;- Caps   0010 3A 00 1D 00 Caps \u0026lt;- LCtrl 1D E0 38 00 RCtrl \u0026lt;- LAlt   0018 38 00 7B 00 LAlt \u0026lt;- Muhenkan 38 E0 70 00 RAlt \u0026lt;- Kana   0020 39 00 79 00 Space \u0026lt;- Henkan 01 00 38 E0 ESC \u0026lt;- RAlt   0028 00 00 00 00 Terminal null value         The mapping of my FILCO Majestouch MINILA Air keyboard (Japanese layout)    Index Scancode Mapping Scancode Mapping     0000 00 00 00 00 Version 00 00 00 00 Flag   0008 0B 00 00 00 Number of mappings 1C 00 52 E0 Enter \u0026lt;- Insert   0010 1D E0 38 00 RCtrl \u0026lt;- LAlt 1D E0 70 00 RCtrl \u0026lt;- Kana   0018 7B 00 46 00 Muhenkan \u0026lt;- ScrollLock 79 00 1D E1 Henkan \u0026lt;- Pause   0020 00 00 45 00 Null \u0026lt;- NumLock 00 00 9D E1 Null \u0026lt;- Break   0028 38 00 7B 00 LAlt \u0026lt;- Muhenkan 01 00 79 00 ESC \u0026lt;- Henkan   0030 52 E0 29 00 Insert \u0026lt;- E/J 00 00 00 00 Terminal null value       It should be noted here that the \u0026#34;Pause/Break\u0026#34; key is not composed of a single scan code, The scan code of \u0026#34;NumLock\u0026#34; is also included, and it needs to be flexibly set according to the situation. You can refer to the following description.   Pause 0xE1:0x1D:0x45 [ 84key Ctrl (0x1D) + NumLock (0x45)], no auto repeat, break code 0xE1:0x9D:0xC5 - Keyboard Scancode Map    Change keyboard layout for IME  Change Chinese input method English layout to Japanese keyboard layout     First, open the following location of the registry. HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\Keyboard Layouts\\00000804     Then make the following adjustment.    Key Before change After change     Layout File KBDUS.DLL KBD106.DLL      Change the keyboard layout of input methods in other languages     In the case of other languages, you only need to change the entry method of the registry path 00000804 to the corresponding language input method, then change the part of ***.DLL to the name of the dynamic link library file in the corresponding language.   Registry settings when an unknown icon appears in \u0026#34;My Computer\u0026#34; or \u0026#34;PC\u0026#34; in Explorer     You can delete the item corresponding to the location icon by locating the following registry path. HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace    Registry settings when unable to connect to the NAS on the local network2     First open the following registry location HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\LanmanWorkstation\\Parameters     Then make the following change    Key Before change After change     AllowInsecureGuestAuth 0 1      References     How to invalidate the Insert key (Originally in Japanese)    Change the key assignment via Scancode Map (Originally in Japanese)    Homegroup removed! How to get network sharing work with Windows 10 v1803   1  Keyboard scan code list (Originally in Japanese)   2  Unable to connect to NAS! The original reason is not SMB1.0! (Originally in Japanese)     ","date":1591228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591228800,"objectID":"ded587e70c48694d473ab2cd2848c700","permalink":"https://xinii.cf/en/post/several-windows-registry-configurations/","publishdate":"2020-06-04T00:00:00Z","relpermalink":"/en/post/several-windows-registry-configurations/","section":"post","summary":"Want to implement some functions that cannot be achieved only through the system settings of Windows, but do not want to use a third-party software? Let's try to modify the registry!","tags":["Registry","Scancode","Keyboard layout"],"title":"Some Windows registry settings that can help you work more efficiently","type":"post"},{"authors":null,"categories":["Windows"],"content":"  Table of Contents  Activation of your Windows 10  Installation of some useful tools  Configuration of msys2    Activation of your Windows 10   Open the cmd of Windows. slmgr -ipk {your product key} slmgr -skms {kms server address of your company} slmgr -ato  Installation of some useful tools     Msys2    AutoHotKey    Ricty   Configuration of msys2  pacman -S git fish tmux emacs gcc python cd ~ git clone https://github.com/xinii/xinconfig .xinconfig cd .xinconfig ./setenv fish exec fish set_conf tmux set_el auto set_el cn change_emacs xin emacs ssh-keygen -A emacs /etc/ssh/sshd_config #Port **** #PasswordAuthentication no cat {path to your pub key} \u0026gt; ~/.ssh/authorized_keys chmod 600 ~/.ssh/authorized_keys chmod 700 ~/.ssh /usr/bin/sshd  ","date":1591228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591228800,"objectID":"05b2164c449901d188d13ac057a28036","permalink":"https://xinii.cf/en/post/some-installations-for-windows-10/","publishdate":"2020-06-04T00:00:00Z","relpermalink":"/en/post/some-installations-for-windows-10/","section":"post","summary":"The following are some of the things I have to do after installing windows. It will be very comfortable for me to use. I don't know if it is suitable for you. Do you want to try it?","tags":["Activation","MSYS2","AutoHotkey","Ricty"],"title":"Some works after Windows 10 clean installation","type":"post"},{"authors":null,"categories":["Linux"],"content":"  Table of Contents  Command to be use  No this command? Do this first  Process  Register repository  Refresh repository  Installation      Command to be use  add-apt-repository  No this command? Do this first  apt install software-properties-common  Process  Register repository  add-apt-repository ppa:kelleyk/emacs apt-add-repository ppa:fish-shell/release-3  Refresh repository  apt update  Installation  apt install emacs26 apt install fish  ","date":1591142400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591142400,"objectID":"5c04cf7203f3d0ee36c4c4007d45d585","permalink":"https://xinii.cf/en/post/add-apt-repository-for-fish-and-emacs/","publishdate":"2020-06-03T00:00:00Z","relpermalink":"/en/post/add-apt-repository-for-fish-and-emacs/","section":"post","summary":"Do you want to install Emacs26 or Fish3.0 on the lower version of ubuntu based linux? Try this method!","tags":["apt","Fish shell","Emacs"],"title":"Add apt repository for Fish and Emacs","type":"post"},{"authors":null,"categories":["SSH"],"content":"  Table of Contents  SSH interruption phenomenon  Remedy  One more thing    SSH daemon on android by termux  Installation  Setting the key  Start daemon in debug mode  Start daemon  Login on the PC side      SSH interruption phenomenon     When logging in to a remote server with ssh, Write failed: Broken pipe may be displayed and the connection may be broken.    It is necessary to change the ssh setting on the client side or the server side, because ssh is automatically disconnected by a timeout if it is not operated for a while. Remedy     Deal on the client side    Describe the following contents in /etc/ssh/ssh_config or ~/.ssh/config ServerAliveInterval 15 ServerAliveCountMax 10   With this setting, 10 times response confirmation will send to the server every 15 seconds, and if there is still no response, it times out.    Deal on the server side    Describe the following contents in /etc/ssh/sshd_config ClientAliveInterval 30 ClientAliveCountMax 5   With this setting, 5 times response confirmation will send to the client every 30 seconds, and if there is still no response, it times out. One more thing   It is recommended to use tools such as tmux or screen, so that even if the connection is lost halfway, you can log in to the remote server again and attach the previous session. SSH daemon on android by termux  Installation  apt install openssh  Setting the key  ssh-keygen cat ~/.ssh/id_rsa.pub \u0026gt; ~/.ssh/authorized_keys chmod 600 ~/.ssh/authorized_keys chmod 700 ~/.ssh  Start daemon in debug mode  sshd -d  Start daemon  sshd  Login on the PC side   Set the private key ~/.ssh/id_rsa generated on the android side in the SSH client of the PC side, and connect to the server on android with specifying IP and port 8022 and without a username. ","date":1591142400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591142400,"objectID":"09b144bbaa80955005ddd230644e63a4","permalink":"https://xinii.cf/en/post/several-ssh-configurations/","publishdate":"2020-06-03T00:00:00Z","relpermalink":"/en/post/several-ssh-configurations/","section":"post","summary":"Very headache for the ssh interruption phenomenon? Want to set an ssh daemon on android by termux? Take a look at this article.","tags":["Termux","Android","Daemon","Keygen"],"title":"Several SSH configurations","type":"post"},{"authors":["Xin Li","Hiroshi Arai","Tomoki Hamagami"],"categories":["Journal article"],"content":"  Click the Cite button above to copy or download the publication metadata.   ","date":1583020800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1583020800,"objectID":"2bd6007a4df432d74c96a1f872b6e761","permalink":"https://xinii.cf/en/publication/li2020wave/","publishdate":"2020-03-01T00:00:00Z","relpermalink":"/en/publication/li2020wave/","section":"publication","summary":"A method for the estimation of wave-making resistance from the hull form and Froude number through deep learning is proposed. At the same time, this research also gives a solution when the data are skewed, which solves the problem of low generalization performance. The reduction of wave-making resistance is an essential issue in hull form design. However, the estimation of wave-making resistance is a time-consuming task that depends on experimental measurements. To enable direct estimation of the wave resistance from hull form, deep learning, which enables end-to-end learning, is an effective approach. The proposed method has two phases. First, auto-encoders, which reduce the dimension of the offset and the profile data, are generated, while performing to the skewed offset data, use an improved sampling method. Subsequently, after the regularization of these data, a deep neural net for regression estimation of wave-making resistance is generated. The results of evaluation experiments show that the proposed method can estimate wave-making resistance with high precision.","tags":["Deep learning","Auto-encoder","Priority sampling"],"title":"Wave-making resistance estimation through deep learning considering the distribution of ship figure","type":"publication"},{"authors":["Xin Li","Tomoki Hamagami"],"categories":["Conference paper"],"content":"  Click the Cite button above to copy or download the publication metadata.   ","date":1575504000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575504000,"objectID":"313965cb1129a8aafe5701c0f53e43ad","permalink":"https://xinii.cf/en/publication/li2019improved/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/en/publication/li2019improved/","section":"publication","summary":"Auto-encoder as the representative method for data dimensionality reduction and feature extraction, plays a very important role on machine learning. However, the data in the actual research work or industrial production are not always normalized data, at this time, it will lead high reconstruction error and slow convergence speed. This study proposed an improved auto-encoder and a denoising auto-encoder based on 2-level prioritized experience replay, which can improve accuracy and reduce loss, while processing a dimensionality reduction or feature extraction problem on high dimension skewed data. In order to evaluate the effectiveness of the proposed method, three models of high dimension simulation dataset which on different skewed degrees are generated. The results of evaluation experiments show that the proposed method can get lower reconstruction error than conventional method for high dimension skewed simulation data.","tags":["Deep Learning","Auto-encoder","Priority sampling"],"title":"An Improved Auto-encoder Based on 2-Level Prioritized Experience Replay for High Dimension Skewed Data","type":"publication"},{"authors":null,"categories":["OpenCV"],"content":"  Table of Contents  Generate swap file  Generate installation script  Run the script  Test the installed OpenCV    Generate swap file   To prevent errors due to insufficient memory during compilation, create a swap file firstly, and store it to somewhere you know. After OS restarting, the swap space will disappear, or you can manually delete this file after the completion of the following compilation and other work. $ fallocate -l 4G swapfile $ chmod 600 swapfile $ mkswap swapfile $ sudo swapon swapfile $ swapon -s  Generate installation script   The original link of the script to install the OpenCV 4.0.0 version  The above is the version used to install OpenCV 4.0.0, here we want to install the newer version 4.1.0, so change the version number part of the above code. #!/bin/bash # # Copyright (c) 2018, NVIDIA CORPORATION. All rights reserved. # # NVIDIA Corporation and its licensors retain all intellectual property # and proprietary rights in and to this software, related documentation # and any modifications thereto. Any use, reproduction, disclosure or # distribution of this software and related documentation without an express # license agreement from NVIDIA Corporation is strictly prohibited. # if [ \u0026#34;$#\u0026#34; -ne 1 ]; then echo \u0026#34;Usage: $0\u0026lt;Install Folder\u0026gt;\u0026#34; exit fi folder=\u0026#34;$1\u0026#34; user=\u0026#34;nvidia\u0026#34; passwd=\u0026#34;nvidia\u0026#34; echo \u0026#34;** Install requirement\u0026#34; sudo apt-get update sudo apt-get install -y build-essential cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev sudo apt-get install -y python2.7-dev python3.6-dev python-dev python-numpy python3-numpy sudo apt-get install -y libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev sudo apt-get install -y libv4l-dev v4l-utils qv4l2 v4l2ucp sudo apt-get install -y curl sudo apt-get update echo \u0026#34;** Download opencv-4.1.0\u0026#34; cd $folder curl -L https://github.com/opencv/opencv/archive/4.1.0.zip -o opencv-4.1.0.zip curl -L https://github.com/opencv/opencv_contrib/archive/4.1.0.zip -o opencv_contrib-4.1.0.zip unzip opencv-4.1.0.zip unzip opencv_contrib-4.1.0.zip cd opencv-4.1.0/ echo \u0026#34;** Building...\u0026#34; mkdir release cd release/ cmake -D WITH_CUDA=ON -D CUDA_ARCH_BIN=\u0026#34;5.3\u0026#34; -D CUDA_ARCH_PTX=\u0026#34;\u0026#34; -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-4.1.0/modules -D WITH_GSTREAMER=ON -D WITH_LIBV4L=ON -D BUILD_opencv_python2=ON -D BUILD_opencv_python3=ON -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_EXAMPLES=OFF -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local .. make -j3 sudo make install sudo apt-get install -y python-opencv python3-opencv echo \u0026#34;** Install opencv-4.1.0 successfully\u0026#34; echo \u0026#34;** Bye :)\u0026#34;   Save the above script as a sh file, for example, install_opencv4.1.0_Nano.sh. Run the script  mkdir opencv sh install_opencv4.1.0_Nano.sh opencv   The installation may take a lot of time, please be patient and wait for the installation to end. It is recommended to use tmux to hang in the background. Test the installed OpenCV   Test the statement import cv2 through the interactive interface of python, it is good if no error is reported.  However, considering that users who use tools such as pyenv for python version management, if they switch to the python version installed under pyenv, the installed OpenCV may not be recognized. The solution is to create a soft link to the OpenCV library and link it to the python library directory under the management of pyenv.  For example, suppose the library directory of the python version in pyenv is, /home/{username}/.anyenv/envs/pyenv/versions/3.6.8/lib/python3.6/site-packages   And the installed OpenCV library path is, /usr/local/lib/python3.6/dist-packages/cv2/python-3.6/cv2.cpython-36m-aarch64-linux-gnu.so   Then execute the following statement to create a soft link, cd /home/{username}/.anyenv/envs/pyenv/versions/3.6.8/lib/python3.6/site-packages ln -s /usr/local/lib/python3.6/dist-packages/cv2/python-3.6/cv2.cpython-36m-aarch64-linux-gnu.so ./   Besides, use the python version of pip in pyenv to install numpy through the pip install numpy statement, and go to the interactive interface to test import cv2. If no error is displayed, the installation is complete. ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"1f4a76eeab4fb4292a9a1961d0b4b7b1","permalink":"https://xinii.cf/en/post/install-opencv-on-jetson-nano/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/en/post/install-opencv-on-jetson-nano/","section":"post","summary":"You may need to do some work when installing OpenCV on Jetson Nano, let's look at it together.","tags":["Jetson Nano","Python"],"title":"How to install OpenCV on Jetson Nano?","type":"post"},{"authors":null,"categories":["Emacs"],"content":"  Table of Contents  The lack of Gnutls in the environment  Potential problems  Install Gnutls  Other possible problems    The lack of Gnutls in the environment   If the current environment lacks Gnutls, the following configuration is required before compiling and installing the Emacs1 source code. ./configure --with-gnutls=no   Or specify the installation directory at the same time, add the option to ignore other dependent libraries that are still missing, such as the following configuration. bash configure --prefix=$HOME/.local --with-gif=no --with-gnutls=no   In this way, the configuration and installation can be carried out smoothly in the absence of permission to the default installation path, or the lack of various dependent libraries. Potential problems   Although the above can achieve the purpose of normal installation of Emacs to the $HOME/.local directory, However, due to the lack of the Gnutls component, when using network transmission in Emacs, you can only use http instead of https.  If only needs a network connection during Emacs initialization, you can solve the problem by changing the Melpa links to start with http, but this will cause problems for future extensions that require network connectivity in Emacs.  For example, when using google-translate, even if the https in all *.el files in the google-translate package are changed to http, during actual use, some https services will still be used automatically, resulting in abnormal translation.  One thing to note here is that after modifying the *.el file, you need to delete all *.elc files to force a recompilation to make the changes take effect. Install Gnutls   After the above actual tests, it is not difficult to find that it is a good choice to install Emacs from the source code after installing Gnutls in the current environment.  Taking OpenSUSE as an example, Gnutls can be installed by running the following statement on the terminal. sudo zypper install gnutls  Other possible problems  checking for library containing tputs... no configure: error: The required function \u0026#39;tputs\u0026#39; was not found in any library. The following libraries were tried (in order): libtinfo, libncurses, libterminfo, libcurses, libtermcap Please try installing whichever of these libraries is most appropriate for your system, together with its header files. For example, a libncurses-dev(el) or similar package. make: *** No targets specified and no makefile found. Stop. make: *** No rule to make target \u0026#39;install\u0026#39;. Stop.   Besides, if Gnutls is installed in the current environment, and the above error is still reported after make, then for OpenSUSE environment, you need a package called ncurses-devel, execute the following sentence to install. sudo zypper install ncurses-devel  1  The logo of Emacs     ","date":1556928000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556928000,"objectID":"eb22f873273a534327f7e7a79c9e5128","permalink":"https://xinii.cf/en/post/install-gnutls-and-compile-emacs-from-source/","publishdate":"2019-05-04T00:00:00Z","relpermalink":"/en/post/install-gnutls-and-compile-emacs-from-source/","section":"post","summary":"Gnutls errors when compiling Emacs from source? Let me take a closer look at what is going on!","tags":["GnuTLS","Compile"],"title":"Install Gnutls and compile Emacs from source","type":"post"},{"authors":null,"categories":null,"content":"  Table of Contents  From bash to zsh  Configure zsh    From zsh to fish-shell  fish shell installation and default shell switch  Configuration of Fish shell  Common problems when using python under the fish shell      From bash to zsh   Although I switched to the fish shell two weeks after using the zsh shell (the fish shell has a special introduction below), this does not deny that the zsh shell is still a good shell. You can switch from any shell to zsh shell in the following way.    Use the following instructions when installing zsh,   brew install zsh (MacOS) apt install zsh (Ubuntu / Linux Mint)     If you want to know the shell currently installed in the system, enter the following command,   cat /etc/shells     How to use zsh as your default shell? Enter the following command,   chsh -s /usr/local/bin/zsh     Error reading about the configuration file    When the shell script explains the error, you can check the currently used sh path. For example, it may be that sh points to dash, which causes an error. View through the following statement. ls -l `which sh`     Script interpreter differences in syntax    When switching from traditional bash and other shells to zsh, you will find that the index of the first element of the collection starts from 1. If you want to start from 0, configure the following statement in the configuration file.    Fix array index for zsh:   if [ \u0026#34;$ZSH_NAME\u0026#34; = \u0026#34;zsh\u0026#34; ];then setopt localoptions ksharrays fi  Configure zsh   Similar to the bash shell\u0026#39;s .bashrc, the configuration of zsh also requires a configuration file. This file is the .zshrc file in the user directory. Click here to open the configuration file I uploaded to Github to download and use. From zsh to fish-shell   After using the zsh shell, I switched to the fish shell in about two weeks. This is not because zsh is not good, but the natural completion and ease of use of fish attracted me. After moving to the fish environment, the shell toss is a conclusion. The following records of the process. fish shell installation and default shell switch   This was mentioned above. Now we will introduce the instructions that different operating systems need to execute.    MacOS:   brew install fish     Ubuntu/Linux Mint:   apt install fish     OpenSUSE:   sudo zypper install fish   If it is an OpenSUSE environment running under Windows, you may need root permission, then add sudo in front of the command. Use the following statement to view the shell used by the current system. cat /etc/shells   If your fish shell is displayed at /usr/bin/fish, Then execute the following statement to switch it to the default shell (add sudo if you have insufficient permissions). chsh -s /usr/bin/fish   Now reopen a terminal session and you will find that the default shell has been switched to fish. If it reports a lot of errors about hostname immediately after opening the fish shell, that is to say, the current environment lacks a package called hostname, then use the package manager of the distribution you are using to install hostname, for example, under OpenSUSE, sudo zypper install hostname  Configuration of Fish shell   The configuration I wrote was uploaded on Github, click here to view my configuration. Common problems when using python under the fish shell   There are two issues that I need to pay attention to at present,    About tmux    When tmux has a session in the background, even if the update PYTHONPATH environment variable will not take effect, then all processes of tmux need to be closed before the update will take effect. In addition to fish, other shell environments should also be encountered. I first appeared in fish and kept it as a record.    About PYTHONPATH    The way to define environment variables in fish shell is set \u0026lt;variable_name\u0026gt; \u0026lt;parameter_1\u0026gt; \u0026lt;parameter_2\u0026gt; This method has great advantages and is very convenient, but for PYTHONPATH, then set PYTHONPATH \u0026lt;parameter_1\u0026gt;:\u0026lt;parameter_2\u0026gt; is more versatile. The reason is that after testing, both methods can be used normally under MacOS, but it is running on Jetson When testing under Ubuntu on Nano, only the second method is available. The specific reason is not yet clear, there may be different reasons for the operating system, It may also be caused by different python versions (For example, the version number is the same, but the different processor architectures cause differences in compilation methods and cause this problem). ","date":1556841600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556841600,"objectID":"1f84eaa4996f8152bfb64399cb2449ef","permalink":"https://xinii.cf/en/post/my-shell-migration-record/","publishdate":"2019-05-03T00:00:00Z","relpermalink":"/en/post/my-shell-migration-record/","section":"post","summary":"bash - zsh - fish","tags":["Bash","Z shell","Fish shell","tmux"],"title":"My shell migration record","type":"post"},{"authors":null,"categories":["Linux"],"content":"  Table of Contents  Prepare the USB media for installing Linux Mint  About the ISO image of Linux Mint      Important: Before starting the following work, because burning will cause data loss, so firstly make sure nothing is stored in your USB media, or nothing important data in it. At the same time, an empty partition where the OS will be installed needs to be prepared on your PC, if not, the data in the partition may also be lost after the installation.   Prepare the USB media for installing Linux Mint   Firstly, prepare the USB media, it can be a U disk or a USB mobile hard disk, and then, the installer for the installation of Linux Mint will be burning on this.    If you are using Windows, please click here    to follow the official manual of Ubuntu to make a USB media for Linux installing.   The above tutorial is to teach you how to make a USB media for installing Ubuntu. When installing Linux Mint, you only thing you need to do is change the ISO path to the path of Linux Mint ISO file, the others are exactly the same.      Here will use a software called Rufus, click here to open the official site of Rufus, also, you can click here to download Rufus directly.   About the ISO image of Linux Mint   You can get the ISO image from the official site of Linux Mint. Click here to open the official site of Linux Mint or click here to download the Linux Mint 19.1. ","date":1555977600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555977600,"objectID":"63d05a9c5d56340bdc3c0e109bc5a0ac","permalink":"https://xinii.cf/en/post/install-linux-mint-from-the-usb-device/","publishdate":"2019-04-23T00:00:00Z","relpermalink":"/en/post/install-linux-mint-from-the-usb-device/","section":"post","summary":"This post tell you how to install Linux Mint through USB media","tags":["Linux Mint","Operating System","USB"],"title":"Install Linux Mint through USB media","type":"post"},{"authors":null,"categories":["Static site generator"],"content":"  Table of Contents  Install Jekyll  Publish blog to Github    Install Jekyll   Jekyll is a static website generation framework written in Ruby language. The following is the official website introduction.   Jekyll is a static site generator. You give it text written in your favorite markup language and it uses layouts to create a static website. You can tweak how you want the site URLs to look, what data gets displayed on the site, and more. –Jekyll1   When installing Jekyll, you first need a Ruby package management environment. The commonly used package manager of the Ruby programming environment is gem. For example, executing the following statement in Ubuntu will also install gem. apt install ruby-dev   After installing gem, make sure its execution path is in our PATH environment variable. If you do not use the above method, but use virtual environment management tools such as rbenv, just call the gem configured in the virtual environment. Then you can install Jekyll by executing the following statement. gem install jekyll  Publish blog to Github   After installing Jekyll, you must hope to post something to Github first to see the effect. Especially understand this mood.  Then next, before blogging, let\u0026#39;s firstly use Jekyll installed to generate a default site and publish it to Github. Execute the following command in the current path where you want to manage the blog locally. jekyll new folder-name-for-your-blog   Then a folder called folder-name-for-your-blog will be generated under the current path, which is the new blog source code created by Jekyll.  Then create a repository called your-user-name-of-github.github.io on Github. After creating the repository, Github will prompt how to use git to push local content to the repository. Follow the wizard to push the contents of the folder-name-for-your-blog folder you just created to this repository.  Then wait a few minutes to open your-user-name-of-github.github.io through your browser, and you can see Jekyll\u0026#39;s welcome page if nothing unexpected happens.  This site is also created by the above method.  (Postscript on June 14, 2020)  This site has now been created using the hugo static website generation framework, To refer to the original site, please click here to visit.  Welcome to contact and leave a message. 1  jekyllrb.com     ","date":1554163200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554163200,"objectID":"21815f0de4793747e4dee1b6e94ecd29","permalink":"https://xinii.cf/en/post/create-a-blog-by-jekyll-and-publish-to-github/","publishdate":"2019-04-02T00:00:00Z","relpermalink":"/en/post/create-a-blog-by-jekyll-and-publish-to-github/","section":"post","summary":"Want to own a blog but don't know how to create it? Try Jekyll natively supported by Github!","tags":["Jekyll","Github","Blog"],"title":"Create a blog via Jekyll and post to Github","type":"post"},{"authors":["Jinwei Wang","Xin Li"],"categories":["Book section"],"content":"","date":1541030400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541030400,"objectID":"7d3c244ae321f3c0db5dc552267255c4","permalink":"https://xinii.cf/en/publication/wang2017/","publishdate":"2018-11-01T00:00:00Z","relpermalink":"/en/publication/wang2017/","section":"publication","summary":"","tags":["Corpus","Spanish","Don Quixote","Translation"],"title":"Multi-translation parallel corpus construction of Don Quixote","type":"publication"},{"authors":["Xin Li","Tomoki Hamagami"],"categories":["Conference paper"],"content":"","date":1535760000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1535760000,"objectID":"d83cfe8ca05a7f6649e3186c9a16b3fe","permalink":"https://xinii.cf/en/publication/li2018prioritized/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/en/publication/li2018prioritized/","section":"publication","summary":"","tags":["Deep learning","Auto-encoder","Priority sampling"],"title":"Prioritized Sampling Method for Autoencoder to Reduce Loss Rate for Skewed Data","type":"publication"},{"authors":["Xin Li","Masaya Nakata","Hamatsu Fumiya","Tomoki Hamagami"],"categories":["Conference paper"],"content":"","date":1498867200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1498867200,"objectID":"87042482027cb9b485efb7cf88eeeb45","permalink":"https://xinii.cf/en/publication/li2017research/","publishdate":"2017-07-01T00:00:00Z","relpermalink":"/en/publication/li2017research/","section":"publication","summary":"","tags":["Time series data","Anomaly detection","Multidimensional data"],"title":"A Research About Anomaly Detection Method for Multidimensional Time Series Data","type":"publication"},{"authors":["Jinwei Wang","Xin Li"],"categories":["Book section"],"content":"","date":1472688000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1472688000,"objectID":"de0f093745f7d3840f37addc80cf88c2","permalink":"https://xinii.cf/en/publication/wang2016/","publishdate":"2016-09-01T00:00:00Z","relpermalink":"/en/publication/wang2016/","section":"publication","summary":"","tags":["Language education","Spanish","Oral communication"],"title":"An Empirical Study of Oral Communication Strategies for Foreign Language Students - Taking Spanish as an Example","type":"publication"},{"authors":null,"categories":null,"content":"   I live in Yokohama. I sincerely thanks for your coming. The following is my brief resume.  Educational experience  Yokohama National University, Japan     October 2016 - March 2020  In May 2016, I awarded a scholarship under the State Scholarship Fund by the China Scholarship Council (CSC).  From October 2016, I studied at the Graduate School of Engineering, Yokohama National University. Specialize in Physics, Electrical and Computer Engineering, research in areas such as machine learning, deep learning, and artificial intelligence applications.  In March 2020, I obtained a Doctor of Engineering degree.   Tokyo International University, Japan     April 2014 - March 2015  From April 2014, I studied at the Graduate School of Business, Tokyo International University as an exchange student.  In March 2015, I completed the study plan.   Shanxi University, China     September 2009 - July 2016  From September 2009, I studied at the School of Computer and Information Technology, Shanxi University, and the School of Economics and Management, Shanxi University, specialize in Software Engineering and Business Administration.  In July 2013, I obtained a Bachelor of Engineering degree and a Bachelor of Business Administration degree (a second degree).  From September 2013, I studied at the (Graduate) School of Computer and Information Technology, Shanxi University, specialize in Software Engineering, and in July 2016, I obtained a Master of Engineering degree.   Research and software works  Publications     Xin Li, Hiroshi Arai, and Tomoki Hamagami. Wave-making resistance estimation through deep learning considering the distribution of ship figure. IEEJ Transactions on Electronics, Information and Systems, 140(3):391–397, 2020. ( in Japanese )    Available on DOI J-STAGE CiNii NDL Online       Xin Li and Tomoki Hamagami. An improved auto-encoder based on 2-level prioritized experience replay for high dimension skewed data. Proceedings in Adaptation, Learning and Optimization, 12:93–105, 2020.    Available on DOI Springer Link       Xin Li and Tomoki Hamagami. Prioritized sampling method for autoencoder to reduce loss rate for skewed data. The papers of technical meeting on systems, IEE Japan, 2018(39):199–203, 2018.    Available on CiNii NDL Online       Jinwei Wang and Xin Li. Multi-translation parallel corpus construction of don quixote. In Spanish Paper Series 2017, pages 4250–4423. Foreign Language Teaching and Researching Press, Beijing, 11 2018. ( in Simplified Chinese )    Available on Amazon Kindle Store       Jinwei Wang and Xin Li. An empirical study of oral communication strategies for foreign language students - taking spanish as an example. In Proceedings of the 11th Cross-Strait Foreign Language Teaching Symposium, pages 1–11. Fu Jen Catholic University Press, Taibei, 9 2016. ( in Traditional Chinese )    Available on Google Books      Academic conference     Xin Li and Tomoki Hamagami. An improved auto-encoder based on 2-level prioritized experience replay for high dimension skewed data. In Proceedings of the 23rd Asia Pacific Symposium on Intelligent and Evolutionary Systems, 2019.    Xin Li and Tomoki Hamagami. Prioritized sampling method for autoencoder to reduce loss rate for skewed data. In The 28th Fuzzy, Artificial Intelligence, Neural Networks and Computational Intelligence, 2018.    Xin Li, Masaya Nakata, Hamatsu Fumiya, and Tomoki Hamagami. A research about anomaly detection method for multidimensional time series data. In The International Conference on Electrical Engineering, 2017.   Software works   Computer software copyright registration certificate from China National Copyright Administration,    November 2014, Eye exercises software based on face recognition and speech recognition, Registration No.2014SR177728, Certificate No.0846964.    September 2014, Image retrieval and classification system based on the bag-of-words model, Registration No.2014SR136257, Certificate No.0805497.    May 2014, HD image generation system based on Android, Registration No.2014SR052862，Certificate No.0722106.   Work experience and internships  Yokohama, Kanagawa, Japan     April 2020 - Now  In Faculty of Engineering, Yokohama National University, as a part-time teaching staff and postdoctoral researcher.    April 2019 - March 2020  In College of Engineering Science, Yokohama National University, as a part-time lecturer for Information System Basic Experiment Course I \u0026amp; II.    April 2017 - July 2017  In Graduate School of Engineering, Yokohama National University, as a teaching assistant for C-programming Experiment Course I.   Kawagoe, Saitama, Japan     June 2014 - February 2015  In Seria Corporation Tobu Kasumigaseki Store, as a part-time working staff.   Beijing, China     July 2012 - September 2012  In ChinaSoft International Co., Ltd., for internship.   Taiyuan, Shanxi, China     April 2013 - March 2014  In Taiyuan ChuangChengHuanXin Technology Co., Ltd., as a part-time software and business manager.    June 2010 - August 2010  In Taiyuan Union Technology Co., Ltd., for internship.   ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"93bc95849692d8039207b9333493b424","permalink":"https://xinii.cf/en/cv/xin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/en/cv/xin/","section":"cv","summary":"I live in Yokohama. I sincerely thanks for your coming. The following is my brief resume.","tags":null,"title":"Xin Li","type":"cv"}]